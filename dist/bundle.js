/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var Game;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./game.js":
/*!*****************!*\
  !*** ./game.js ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _lander__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lander */ \"./lander/index.js\");\n\n\n\nlet main = null;\nlet main_ctx = null;\n\nlet map = null;\nlet map_ctx = null;\n\nfunction time() {\n    return new Date().getTime();\n}\n\nconst draw = () => {\n    const cam = (0,_lander__WEBPACK_IMPORTED_MODULE_0__.lander_camera_matrix)(_lander__WEBPACK_IMPORTED_MODULE_0__.lander_ship.p[0], _lander__WEBPACK_IMPORTED_MODULE_0__.lander_ship.p[1], _lander__WEBPACK_IMPORTED_MODULE_0__.lander_ship.p[2], -_lander__WEBPACK_IMPORTED_MODULE_0__.lander_ship.r[1]);\n    main_ctx.fillStyle = \"#000000\";\n    _lander__WEBPACK_IMPORTED_MODULE_0__.lander_sort.clear(main_ctx);\n    _lander__WEBPACK_IMPORTED_MODULE_0__.lander_sort.begin();\n    _lander__WEBPACK_IMPORTED_MODULE_0__.lander_light.eye = (0,_lander__WEBPACK_IMPORTED_MODULE_0__.lander_camera_eye)();\n    (0,_lander__WEBPACK_IMPORTED_MODULE_0__.lander_ground_draw)(cam);\n    (0,_lander__WEBPACK_IMPORTED_MODULE_0__.lander_physics_draw)(cam);\n\n    _lander__WEBPACK_IMPORTED_MODULE_0__.lander_sort.draw(main_ctx);\n\n    (0,_lander__WEBPACK_IMPORTED_MODULE_0__.lander_hud_draw)(main_ctx, map);\n}\n\nvar avgtime = 0;\nvar last = time();\n\nfunction frame() {\n    for (var i = 0; i < avgtime / 25; i++)\n        (0,_lander__WEBPACK_IMPORTED_MODULE_0__.lander_physics_tick)();\n\n    draw();\n\n    var now = time();\n\n    avgtime = avgtime * 0.95 + (now - last) * 0.05;\n\n    last = now;\n\n    setTimeout(frame, 0);\n}\n\nconst init = () => {\n    (0,_lander__WEBPACK_IMPORTED_MODULE_0__.lander_physics_init)();\n    (0,_lander__WEBPACK_IMPORTED_MODULE_0__.lander_input_init)();\n\n    main = document.getElementById('main_canvas');\n    main_ctx = main.getContext('2d');\n\n    main_ctx.fillStyle = \"#000000\";\n    main_ctx.fillRect(0, 0, 400, 400);\n\n    map = document.getElementById('map_canvas');\n    map_ctx = map.getContext('2d');\n\n    (0,_lander__WEBPACK_IMPORTED_MODULE_0__.lander_ground_init_map)(map_ctx);\n\n    setTimeout(frame, 0);\n}\n\nsetInterval(()=> console.log('fps', 1000/avgtime), 1000)\n\n\n\n//# sourceURL=webpack://Game/./game.js?");

/***/ }),

/***/ "./j3d/clip.js":
/*!*********************!*\
  !*** ./j3d/clip.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   j3d_clip: () => (/* binding */ j3d_clip)\n/* harmony export */ });\n/* harmony import */ var _matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matrix */ \"./j3d/matrix.js\");\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vector */ \"./j3d/vector.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./j3d/util.js\");\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\n\r\n\r\n\r\nfunction j3d_clip(planes)\r\n{\r\n   this.planes = planes;\r\n\r\n   var planes_internal;\r\n\r\n   this.transform = function(matrix)\r\n   {\r\n      var transpose = (0,_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_transpose)(matrix);\r\n      \r\n      planes_internal = (0,_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(planes, transpose);\r\n   };                       \r\n                       \r\n   this.clip_indices = function(indices, vertices, matrix, mask)\r\n   {\r\n      if (mask == null)\r\n         mask = 0xffffffff;\r\n      \r\n      var vertices0 = vertices[0];\r\n      var vertices1 = vertices[1];\r\n      var thresh = vertices0.length;\r\n         \r\n      for (var i = 0; indices.length > 0 && i < planes_internal.length; i++) {\r\n         var plane = planes_internal[i];\r\n         \r\n         if (mask & 1 << i) {\r\n            var new_indices = [];\r\n         \r\n            var index = indices[indices.length - 1];\r\n            var vertex = index < thresh ? vertices0[index] : vertices1[index - thresh];\r\n            var dot = (0,_vector__WEBPACK_IMPORTED_MODULE_1__.j3d_vector_dot)(vertex, plane);\r\n         \r\n            for (var j = 0; j < indices.length; j++) {\r\n               var new_index = indices[j];\r\n               var new_vertex = new_index < thresh ? vertices0[new_index] : vertices1[new_index - thresh];\r\n               var new_dot = (0,_vector__WEBPACK_IMPORTED_MODULE_1__.j3d_vector_dot)(new_vertex, plane);\r\n      \r\n               if (new_dot > 0 && dot <= 0 || new_dot <= 0 && dot > 0) {\r\n                  new_indices.push(thresh + vertices1.j3d_length);\r\n                  \r\n                  (0,_vector__WEBPACK_IMPORTED_MODULE_1__.j3d_vector_blend)(vertex, new_vertex, dot / (dot - new_dot), vertices1[vertices1.j3d_length++]);\r\n               }\r\n         \r\n               if (new_dot <= 0)\r\n                  new_indices.push(new_index);\r\n         \r\n               index = new_index;\r\n               vertex = new_vertex;\r\n               dot = new_dot;    \r\n            }\r\n            \r\n            indices = new_indices;\r\n         }\r\n      }\r\n      \r\n      return indices;\r\n   };\r\n\r\n   this.clip_model = function(model, matrix, mprime)\r\n   {\r\n      if (mprime == null) {\r\n         mprime = {vertices: []};\r\n      }\r\n\r\n      mprime.vertices[0] = model.vertices[0];\r\n      \r\n      if (mprime.vertices[1] == null || mprime.vertices[1].length < model.faces.length * planes.length)\r\n         mprime.vertices[1] = (0,_util__WEBPACK_IMPORTED_MODULE_2__.j3d_util_make2darray)(model.faces.length * planes.length, 4);\r\n         \r\n      mprime.vertices[1].j3d_length = 0;\r\n\r\n      mprime.normals = model.normals;\r\n      mprime.centers = model.centers;\r\n      \r\n      if (mprime.faces == null || mprime.faces.length < model.faces.length)\r\n         mprime.faces = (0,_util__WEBPACK_IMPORTED_MODULE_2__.j3d_util_makeobjectarray)(model.faces.length);\r\n         \r\n//      mprime.faces.j3d_length = 0;\r\n      \r\n      mprime.bias = model.bias;\r\n      \r\n      this.transform(matrix);\r\n\r\n      var length = 0;\r\n      \r\n      for (var i = 0; i < model.faces.length; i++) {\r\n         var face = model.faces[i];\r\n   \r\n         if (face.clip == 0) {\r\n            var fprime = mprime.faces[length++];\r\n            \r\n            fprime.indices = face.indices;\r\n            fprime.material = face.material;\r\n            fprime.normal = face.normal;\r\n            fprime.center = face.center;\r\n            fprime.clip = face.clip;\r\n            fprime.cull = face.cull;\r\n            fprime.bias = face.bias;\r\n         } else {\r\n            var iprime = this.clip_indices(face.indices, mprime.vertices, face.clip);\r\n            \r\n            if (iprime.length > 0) {\r\n               var fprime = mprime.faces[length++];\r\n               \r\n               fprime.indices = iprime;\r\n               fprime.material = face.material;\r\n               fprime.normal = face.normal;\r\n               fprime.center = face.center;\r\n               fprime.clip = face.clip;\r\n               fprime.cull = face.cull;\r\n               fprime.bias = face.bias;\r\n            }\r\n         }\r\n      }\r\n      \r\n      mprime.faces.j3d_length = length;\r\n      \r\n      return mprime;\r\n   }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://Game/./j3d/clip.js?");

/***/ }),

/***/ "./j3d/light.js":
/*!**********************!*\
  !*** ./j3d/light.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   j3d_light: () => (/* binding */ j3d_light)\n/* harmony export */ });\n/* harmony import */ var _matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matrix */ \"./j3d/matrix.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./j3d/util.js\");\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vector */ \"./j3d/vector.js\");\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\n\r\n\r\n\r\nfunction j3d_light(dir)\r\n{\r\n   this.dir = dir;\r\n   this.eye = [0, 0, 0, 1];\r\n   \r\n   var dir_internal;\r\n   var eye_internal;\r\n\r\n   var work1 = [0, 0, 0, 0];\r\n   var work2 = [0, 0, 0, 0];\r\n      \r\n   this.transform = function(matrix) \r\n   {\r\n      var inverse = (0,_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_invert_simple)(matrix);\r\n      \r\n      dir_internal = (0,_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)([this.dir], inverse)[0];\r\n      eye_internal = (0,_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)([this.eye], inverse)[0];\r\n   };\r\n   \r\n   this.light_face = function(normal, center, material) \r\n   {\r\n      if (material.static)\r\n         return material.static;\r\n      else {\r\n         /*\r\n            ambient component\r\n         */\r\n         \r\n         var r = material.ambient[0];\r\n         var g = material.ambient[1];\r\n         var b = material.ambient[2];\r\n       \r\n         /*\r\n            diffuse component\r\n         */\r\n      \r\n         var diff = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_dot)(normal, dir_internal);\r\n\r\n         if (diff > 0) {\r\n            r += material.diffuse[0] * diff;\r\n            g += material.diffuse[1] * diff;\r\n            b += material.diffuse[2] * diff;\r\n         }\r\n      \r\n         /*\r\n            specular component\r\n         */\r\n   \r\n         if (normal != null && center != null) {\r\n            var v1 = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_subtract)(center, eye_internal, work1);\r\n            var dot = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_dot)(v1, normal);\r\n            var v2 = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_multiply)(normal, -2 * dot, work2);\r\n            var v3 = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_add)(v1, v2, work1);\r\n            var v4 = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_normalize)(v3, work1);\r\n      \r\n            var spec = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_dot)(v4, dir_internal);\r\n   \r\n            if (spec > 0) {\r\n               spec = Math.pow(spec, material.phong);\r\n                           \r\n               r += material.specular[0] * spec;\r\n               g += material.specular[1] * spec;\r\n               b += material.specular[2] * spec;\r\n            }\r\n         }\r\n         \r\n         /*\r\n            generate HTML color\r\n         */\r\n         \r\n         return (0,_util__WEBPACK_IMPORTED_MODULE_1__.j3d_util_rgbcolor)(r * 256, g * 256, b * 256);\r\n      }\r\n   };\r\n\r\n   this.light_model = function(model, matrix)   \r\n   {\r\n      this.transform(matrix);\r\n\r\n      var length = model.faces.j3d_length;\r\n      \r\n      if (length == null)\r\n         length = model.faces.length;\r\n         \r\n      for (var i = 0; i < length; i++) {\r\n         var face = model.faces[i];\r\n         \r\n         face.color = this.light_face(model.normals[face.normal], model.centers[face.center], face.material);\r\n      }\r\n      \r\n      return model;\r\n   };\r\n}\r\n\r\n\n\n//# sourceURL=webpack://Game/./j3d/light.js?");

/***/ }),

/***/ "./j3d/matrix.js":
/*!***********************!*\
  !*** ./j3d/matrix.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   j3d_matrix_dehomogenize: () => (/* binding */ j3d_matrix_dehomogenize),\n/* harmony export */   j3d_matrix_identity: () => (/* binding */ j3d_matrix_identity),\n/* harmony export */   j3d_matrix_invert_simple: () => (/* binding */ j3d_matrix_invert_simple),\n/* harmony export */   j3d_matrix_multiply: () => (/* binding */ j3d_matrix_multiply),\n/* harmony export */   j3d_matrix_project: () => (/* binding */ j3d_matrix_project),\n/* harmony export */   j3d_matrix_rotate_x: () => (/* binding */ j3d_matrix_rotate_x),\n/* harmony export */   j3d_matrix_rotate_y: () => (/* binding */ j3d_matrix_rotate_y),\n/* harmony export */   j3d_matrix_rotate_z: () => (/* binding */ j3d_matrix_rotate_z),\n/* harmony export */   j3d_matrix_scale: () => (/* binding */ j3d_matrix_scale),\n/* harmony export */   j3d_matrix_translate: () => (/* binding */ j3d_matrix_translate),\n/* harmony export */   j3d_matrix_transpose: () => (/* binding */ j3d_matrix_transpose)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./j3d/util.js\");\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\n\r\n\r\nfunction j3d_matrix_transpose(a, d)\r\n{\r\n   if (d == null)\r\n      return [[a[0][0], a[1][0], a[2][0], a[3][0]],\r\n              [a[0][1], a[1][1], a[2][1], a[3][1]],\r\n              [a[0][2], a[1][2], a[2][2], a[3][2]],\r\n              [a[0][3], a[1][3], a[2][3], a[3][3]]];\r\n   else {\r\n      for (var i = 0; i < 4; i++)\r\n         for (var j = 0; j <= i; j++) {\r\n            var t1 = a[i][j];\r\n            var t2 = a[j][i];\r\n            \r\n            d[i][j] = t2;\r\n            d[j][i] = t1;\r\n         }\r\n         \r\n      return d;\r\n   }\r\n}\r\n\r\nfunction j3d_matrix_invert_simple(a, d)\r\n{\r\n   var m1 = [[a[0][0], a[1][0], a[2][0], 0.0],\r\n             [a[0][1], a[1][1], a[2][1], 0.0],\r\n             [a[0][2], a[1][2], a[2][2], 0.0],\r\n             [    0.0,     0.0,     0.0, 1.0]];\r\n\r\n   var m2 = [[     1.0,      0.0,      0.0, 0.0],\r\n             [     0.0,      1.0,      0.0, 0.0],\r\n             [     0.0,      0.0,      1.0, 0.0],\r\n             [-a[3][0], -a[3][1], -a[3][2], 1.0]];\r\n\r\n   return j3d_matrix_multiply(m2, m1, d);\r\n}\r\n\r\nfunction j3d_matrix_rotate_x(a, d)\r\n{\r\n   var s = Math.sin(a);\r\n   var c = Math.cos(a);\r\n   \r\n   if (d == null)\r\n      return [[ 1,  0,  0,  0],\r\n              [ 0,  c,  s,  0],\r\n              [ 0, -s,  c,  0],\r\n              [ 0,  0,  0,  1]];\r\n   else {\r\n      var d0 = d[0];\r\n      var d1 = d[1];\r\n      var d2 = d[2];\r\n      var d3 = d[3];\r\n      \r\n      d0[0] = 1;\r\n      d0[1] = 0;\r\n      d0[2] = 0;\r\n      d0[3] = 0;\r\n\r\n      d1[0] = 0;\r\n      d1[1] = c;\r\n      d1[2] = s;\r\n      d1[3] = 0;\r\n\r\n      d2[0] = 0;\r\n      d2[1] = -s;\r\n      d2[2] = c;\r\n      d2[3] = 0;\r\n\r\n      d3[0] = 0;\r\n      d3[1] = 0;\r\n      d3[2] = 0;\r\n      d3[3] = 1;\r\n\r\n      return d;      \r\n   }\r\n}\r\n\r\nfunction j3d_matrix_rotate_y(a, d)\r\n{\r\n   var s = Math.sin(a);\r\n   var c = Math.cos(a);\r\n\r\n   if (d == null)   \r\n      return [[ c,  0, -s,  0],\r\n              [ 0,  1,  0,  0],\r\n              [ s,  0,  c,  0],\r\n              [ 0,  0,  0,  1]];\r\n   else {\r\n      var d0 = d[0];\r\n      var d1 = d[1];\r\n      var d2 = d[2];\r\n      var d3 = d[3];\r\n      \r\n      d0[0] = c;\r\n      d0[1] = 0;\r\n      d0[2] = -s;\r\n      d0[3] = 0;\r\n\r\n      d1[0] = 0;\r\n      d1[1] = 1;\r\n      d1[2] = 0;\r\n      d1[3] = 0;\r\n\r\n      d2[0] = s;\r\n      d2[1] = 0;\r\n      d2[2] = c;\r\n      d2[3] = 0;\r\n\r\n      d3[0] = 0;\r\n      d3[1] = 0;\r\n      d3[2] = 0;\r\n      d3[3] = 1;\r\n\r\n      return d;      \r\n   }\r\n}\r\n              \r\nfunction j3d_matrix_rotate_z(a, d)\r\n{\r\n   var s = Math.sin(a);\r\n   var c = Math.cos(a);\r\n\r\n   if (d == null)   \r\n      return [[ c,  s,  0,  0],\r\n              [-s,  c,  0,  0],\r\n              [ 0,  0,  1,  0],\r\n              [ 0,  0,  0,  1]];\r\n   else {\r\n      var d0 = d[0];\r\n      var d1 = d[1];\r\n      var d2 = d[2];\r\n      var d3 = d[3];\r\n      \r\n      d0[0] = c;\r\n      d0[1] = s;\r\n      d0[2] = 0;\r\n      d0[3] = 0;\r\n\r\n      d1[0] = -s;\r\n      d1[1] = c;\r\n      d1[2] = 0;\r\n      d1[3] = 0;\r\n\r\n      d2[0] = 0;\r\n      d2[1] = 0;\r\n      d2[2] = 1;\r\n      d2[3] = 0;\r\n\r\n      d3[0] = 0;\r\n      d3[1] = 0;\r\n      d3[2] = 0;\r\n      d3[3] = 1;\r\n\r\n      return d;      \r\n   }\r\n}\r\n              \r\nfunction j3d_matrix_translate(x, y, z, d)\r\n{\r\n   if (d == null)\r\n      return [[ 1,  0,  0,  0],\r\n              [ 0,  1,  0,  0],\r\n              [ 0,  0,  1,  0],\r\n              [ x,  y,  z,  1]];\r\n   else {\r\n      var d0 = d[0];\r\n      var d1 = d[1];\r\n      var d2 = d[2];\r\n      var d3 = d[3];\r\n      \r\n      d0[0] = 1;\r\n      d0[1] = 0;\r\n      d0[2] = 0;\r\n      d0[3] = 0;\r\n\r\n      d1[0] = 0;\r\n      d1[1] = 1;\r\n      d1[2] = 0;\r\n      d1[3] = 0;\r\n\r\n      d2[0] = 0;\r\n      d2[1] = 0;\r\n      d2[2] = 1;\r\n      d2[3] = 0;\r\n\r\n      d3[0] = x;\r\n      d3[1] = y;\r\n      d3[2] = z;\r\n      d3[3] = 1;\r\n\r\n      return d;      \r\n   }\r\n}\r\n\r\nfunction j3d_matrix_scale(x, y, z, d)\r\n{\r\n   if (d == null)\r\n      return [[ x,  0,  0,  0],\r\n              [ 0,  y,  0,  0],\r\n              [ 0,  0,  z,  0],\r\n              [ 0,  0,  0,  1]];\r\n   else {\r\n      var d0 = d[0];\r\n      var d1 = d[1];\r\n      var d2 = d[2];\r\n      var d3 = d[3];\r\n      \r\n      d0[0] = x;\r\n      d0[1] = 0;\r\n      d0[2] = 0;\r\n      d0[3] = 0;\r\n\r\n      d1[0] = 0;\r\n      d1[1] = y;\r\n      d1[2] = 0;\r\n      d1[3] = 0;\r\n\r\n      d2[0] = 0;\r\n      d2[1] = 0;\r\n      d2[2] = z;\r\n      d2[3] = 0;\r\n\r\n      d3[0] = 0;\r\n      d3[1] = 0;\r\n      d3[2] = 0;\r\n      d3[3] = 1;\r\n\r\n      return d;      \r\n   }\r\n}\r\n\r\nfunction j3d_matrix_project(w, h, n, f, d)\r\n{\r\n   var l = f - n;\r\n   \r\n   if (d == null)\r\n      return [[ 2 * n / w,          0,          0,          0],\r\n              [         0,  2 * n / h,          0,          0],\r\n              [         0,          0,      f / l,          1],\r\n              [         0,          0, -f * n / l,          0]];\r\n   else {\r\n      var d0 = d[0];\r\n      var d1 = d[1];\r\n      var d2 = d[2];\r\n      var d3 = d[3];\r\n      \r\n      d0[0] = 2 * n / w;\r\n      d0[1] = 0;\r\n      d0[2] = 0;\r\n      d0[3] = 0;\r\n\r\n      d1[0] = 0;\r\n      d1[1] = 2 * n / h;\r\n      d1[2] = 0;\r\n      d1[3] = 0;\r\n\r\n      d2[0] = 0;\r\n      d2[1] = 0;\r\n      d2[2] = f / l;\r\n      d2[3] = 1;\r\n\r\n      d3[0] = 0;\r\n      d3[1] = 0;\r\n      d3[2] = -f * n / l;\r\n      d3[3] = 0;\r\n\r\n      return d;      \r\n   }\r\n}\r\n\r\nfunction j3d_matrix_null(d)\r\n{\r\n   if (d == null)\r\n      return [[0, 0, 0, 0], \r\n              [0, 0, 0, 0], \r\n              [0, 0, 0, 0], \r\n              [0, 0, 0, 0]];\r\n   else {\r\n      var d0 = d[0];\r\n      var d1 = d[1];\r\n      var d2 = d[2];\r\n      var d3 = d[3];\r\n      \r\n      d0[0] = 0;\r\n      d0[1] = 0;\r\n      d0[2] = 0;\r\n      d0[3] = 0;\r\n\r\n      d1[0] = 0;\r\n      d1[1] = 0;\r\n      d1[2] = 0;\r\n      d1[3] = 0;\r\n\r\n      d2[0] = 0;\r\n      d2[1] = 0;\r\n      d2[2] = 0;\r\n      d2[3] = 0;\r\n\r\n      d3[0] = 0;\r\n      d3[1] = 0;\r\n      d3[2] = 0;\r\n      d3[3] = 0;\r\n\r\n      return d;      \r\n   }\r\n}\r\n\r\nfunction j3d_matrix_identity(d)\r\n{\r\n   if (d == null)\r\n      return [[1, 0, 0, 0], \r\n              [0, 1, 0, 0], \r\n              [0, 0, 1, 0], \r\n              [0, 0, 0, 1]];\r\n   else {\r\n      var d0 = d[0];\r\n      var d1 = d[1];\r\n      var d2 = d[2];\r\n      var d3 = d[3];\r\n      \r\n      d0[0] = 1;\r\n      d0[1] = 0;\r\n      d0[2] = 0;\r\n      d0[3] = 0;\r\n\r\n      d1[0] = 0;\r\n      d1[1] = 1;\r\n      d1[2] = 0;\r\n      d1[3] = 0;\r\n\r\n      d2[0] = 0;\r\n      d2[1] = 0;\r\n      d2[2] = 1;\r\n      d2[3] = 0;\r\n\r\n      d3[0] = 0;\r\n      d3[1] = 0;\r\n      d3[2] = 0;\r\n      d3[3] = 1;\r\n\r\n      return d;      \r\n   }\r\n}\r\n\r\nfunction j3d_matrix_multiply(a, b, d)\r\n{\r\n   var length = a.j3d_length;\r\n   \r\n   if (length == null)\r\n      length = a.length;\r\n   \r\n   if (d == null)\r\n      d = (0,_util__WEBPACK_IMPORTED_MODULE_0__.j3d_util_make2darray)(length, 4);\r\n\r\n   var b0 = b[0];\r\n   var b1 = b[1];\r\n   var b2 = b[2];\r\n   var b3 = b[3];\r\n   \r\n   var b00 = b0[0];\r\n   var b01 = b0[1];\r\n   var b02 = b0[2];\r\n   var b03 = b0[3];\r\n   var b10 = b1[0];\r\n   var b11 = b1[1];\r\n   var b12 = b1[2];\r\n   var b13 = b1[3];\r\n   var b20 = b2[0];\r\n   var b21 = b2[1];\r\n   var b22 = b2[2];\r\n   var b23 = b2[3];\r\n   var b30 = b3[0];\r\n   var b31 = b3[1];\r\n   var b32 = b3[2];\r\n   var b33 = b3[3];\r\n         \r\n   for (var i = 0; i < length; i++) {\r\n      var ai = a[i];\r\n      var di = d[i];\r\n            \r\n      var ai0 = ai[0];\r\n      var ai1 = ai[1];\r\n      var ai2 = ai[2];\r\n      var ai3 = ai[3];\r\n      \r\n      di[0] = ai0 * b00 + ai1 * b10 + ai2 * b20 + ai3 * b30;\r\n      di[1] = ai0 * b01 + ai1 * b11 + ai2 * b21 + ai3 * b31;\r\n      di[2] = ai0 * b02 + ai1 * b12 + ai2 * b22 + ai3 * b32;\r\n      di[3] = ai0 * b03 + ai1 * b13 + ai2 * b23 + ai3 * b33;\r\n   }\r\n\r\n   d.j3d_length = length;\r\n      \r\n   return d;\r\n}\r\n\r\nfunction j3d_matrix_dehomogenize(a, d)\r\n{\r\n   var length = a.j3d_length;\r\n   \r\n   if (length == null)\r\n      length = a.length;\r\n   \r\n   if (d == null)\r\n      d = (0,_util__WEBPACK_IMPORTED_MODULE_0__.j3d_util_make2darray)(length, 4);\r\n   \r\n   for (var i = 0; i < length; i++) {\r\n      var ai = a[i];\r\n      var di = d[i];\r\n      \r\n      var ai3 = ai[3];\r\n      \r\n      di[0] = ai[0] / ai3;\r\n      di[1] = ai[1] / ai3;   \r\n      di[2] = ai[2] / ai3;\r\n      di[3] = 1.0;\r\n   }\r\n   \r\n   d.j3d_length = length;\r\n   \r\n   return d;\r\n}\r\n\r\n\n\n//# sourceURL=webpack://Game/./j3d/matrix.js?");

/***/ }),

/***/ "./j3d/model.js":
/*!**********************!*\
  !*** ./j3d/model.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   j3d_model_dehomogenize: () => (/* binding */ j3d_model_dehomogenize),\n/* harmony export */   j3d_model_make_centers: () => (/* binding */ j3d_model_make_centers),\n/* harmony export */   j3d_model_make_normals: () => (/* binding */ j3d_model_make_normals),\n/* harmony export */   j3d_model_multiply: () => (/* binding */ j3d_model_multiply)\n/* harmony export */ });\n/* harmony import */ var _matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matrix */ \"./j3d/matrix.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./j3d/util.js\");\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vector */ \"./j3d/vector.js\");\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\nfunction j3d_model_make_normals(model)\r\n{\r\n   model.normals = new Array(model.faces.length);\r\n   \r\n   for (var i = 0; i < model.faces.length; i++) {\r\n      var v1 = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_subtract)(model.vertices[0][model.faces[i].indices[1]], model.vertices[0][model.faces[i].indices[0]]);\r\n      var v2 = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_subtract)(model.vertices[0][model.faces[i].indices[2]], model.vertices[0][model.faces[i].indices[0]]);\r\n      \r\n      model.normals[i] = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_normalize)((0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_cross)(v2, v1));\r\n      \r\n      model.faces[i].normal = i;\r\n   }\r\n}\r\n\r\nfunction j3d_model_make_centers(model)\r\n{\r\n   model.centers = new Array(model.faces.length);\r\n\r\n   for (var i = 0; i < model.faces.length; i++) {\r\n      var center = [0, 0, 0, 0];\r\n\r\n      for (var j = 0; j < model.faces[i].indices.length; j++)\r\n         center = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_add)(center, model.vertices[0][model.faces[i].indices[j]]);\r\n\r\n      model.centers[i] = (0,_vector__WEBPACK_IMPORTED_MODULE_2__.j3d_vector_multiply)(center, 1.0 / model.faces[i].indices.length);\r\n      \r\n      model.faces[i].center = i;\r\n   }\r\n}\r\n\r\nfunction j3d_model_multiply(model, matrix, mprime)\r\n{\r\n   if (mprime == null)\r\n      mprime = {vertices: []};\r\n\r\n   mprime.normals = model.normals;\r\n   mprime.centers = model.centers;\r\n   mprime.faces = model.faces;\r\n   mprime.bias = model.bias;\r\n                 \r\n   for (var i = 0; i < model.vertices.length; i++) {\r\n      if (mprime.vertices[i] == null || mprime.vertices[i].length < model.vertices[i].length)\r\n         mprime.vertices[i] = (0,_util__WEBPACK_IMPORTED_MODULE_1__.j3d_util_make2darray)(model.vertices[i].length, 4);\r\n         \r\n      (0,_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(model.vertices[i], matrix, mprime.vertices[i]);\r\n   }\r\n                 \r\n   return mprime;\r\n}                                    \r\n\r\nfunction j3d_model_dehomogenize(model, mprime)\r\n{\r\n   if (mprime == null)\r\n      mprime = {vertices: []};\r\n\r\n   mprime.normals = model.normals;\r\n   mprime.centers = model.centers;\r\n   mprime.faces = model.faces;\r\n   mprime.bias = model.bias;\r\n\r\n   for (var i = 0; i < model.vertices.length; i++) {\r\n      if (mprime.vertices[i] == null || mprime.vertices[i].length < model.vertices[i].length)\r\n         mprime.vertices[i] = (0,_util__WEBPACK_IMPORTED_MODULE_1__.j3d_util_make2darray)(model.vertices[i].length, 4);\r\n      \r\n      (0,_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_dehomogenize)(model.vertices[i], mprime.vertices[i]);\r\n   }\r\n                 \r\n   return mprime;\r\n}\r\n\r\n\n\n//# sourceURL=webpack://Game/./j3d/model.js?");

/***/ }),

/***/ "./j3d/sort.js":
/*!*********************!*\
  !*** ./j3d/sort.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   j3d_sort: () => (/* binding */ j3d_sort)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./j3d/util.js\");\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\n\r\nfunction j3d_sort(buckets, cells, bounds)\r\n{\r\n   const cell_type_face     = 0;\r\n   const cell_type_particle = 1;\r\n\r\n   var bucket = new Array(buckets);\r\n   \r\n   var cell = (0,_util__WEBPACK_IMPORTED_MODULE_0__.j3d_util_makeobjectarray)(cells);\r\n   var bound = (0,_util__WEBPACK_IMPORTED_MODULE_0__.j3d_util_makeobjectarray)(bounds);\r\n   \r\n   var pos;\r\n   \r\n   this.clear = function(ctx)\r\n   {\r\n      for (var i = 0; i < bound.length; i++) {\r\n         var b = bound[i];\r\n         \r\n         ctx.fillRect(b.xmin - 1, b.ymin - 1, b.xmax - b.xmin + 2, b.ymax - b.ymin + 2);\r\n      }\r\n   };\r\n      \r\n   this.begin = function()\r\n   {\r\n      for (var i = 0; i < bucket.length; i++)\r\n         bucket[i] = null;\r\n         \r\n      for (var i = 0; i < bound.length; i++) {\r\n         var b = bound[i];\r\n         \r\n         b.xmin = 2048;\r\n         b.ymin = 2048;\r\n         b.xmax = -2048;\r\n         b.ymax = -2048;\r\n      }\r\n         \r\n      pos = 0;\r\n   };\r\n\r\n   this.begin();\r\n   \r\n   function add_cell(z)\r\n   {\r\n      var b = Math.floor(z * bucket.length);\r\n      \r\n      if (b < 0)\r\n         b = 0;\r\n      if (b > bucket.length - 1)\r\n         b = bucket.length - 1;\r\n   \r\n      if (pos == cell.length)\r\n         cell.push(new Object());\r\n         \r\n      var c = cell[pos++];\r\n   \r\n      c.next = bucket[b];\r\n      \r\n      bucket[b] = c;\r\n      \r\n      return c;   \r\n   }\r\n\r\n   this.add_face = function(vertices, face, group, bias)\r\n   {\r\n      var vertices0 = vertices[0];\r\n      var vertices1 = vertices[1];\r\n      var thresh = vertices0.length;\r\n      \r\n      var zmin = 1.0;\r\n   \r\n      for (var i = 0; i < face.indices.length; i++) {\r\n         var index = face.indices[i];\r\n         var znew = index < thresh ? vertices0[index][2] : vertices1[index - thresh][2];\r\n         \r\n         if (znew < zmin)\r\n            zmin = znew;\r\n      }\r\n         \r\n      if (bias != null)\r\n         zmin += bias;\r\n         \r\n      if (face.bias != null)\r\n         zmin += face.bias;\r\n   \r\n      var c = add_cell(zmin);\r\n   \r\n      c.type = cell_type_face;\r\n      c.vertices = vertices;\r\n      c.face = face;\r\n      c.color = face.color;\r\n      c.group = group;\r\n   };\r\n   \r\n   this.add_particle = function(vertex, color, size, group, bias)\r\n   {\r\n      var z = vertex[2];\r\n      \r\n      if (bias != null)\r\n         z += bias;\r\n      \r\n      var c = add_cell(z);\r\n      \r\n      c.type = cell_type_particle;\r\n      c.vertex = vertex;\r\n      c.color = color;\r\n      c.group = group;\r\n      c.size = size;\r\n   };\r\n\r\n   this.add_model = function(model, group)\r\n   {\r\n      var vertices0 = model.vertices[0];\r\n      var vertices1 = model.vertices[1];\r\n      var thresh = vertices0.length;\r\n      \r\n      var length = model.faces.j3d_length;\r\n      \r\n      if (length == null)\r\n         length = model.faces.length;\r\n      \r\n      for (var i = 0; i < length; i++) {\r\n         var face = model.faces[i];\r\n   \r\n         if (face.cull != false) {  \r\n            var i0 = face.indices[0];\r\n            var i1 = face.indices[1];\r\n            var i2 = face.indices[2];\r\n                \r\n            var v0 = i0 < thresh ? vertices0[i0] : vertices1[i0 - thresh];\r\n            var v1 = i1 < thresh ? vertices0[i1] : vertices1[i1 - thresh];\r\n            var v2 = i2 < thresh ? vertices0[i2] : vertices1[i2 - thresh];\r\n      \r\n            var wind = (v1[0] - v0[0]) * (v2[1] - v0[1]) - (v2[0] - v0[0]) * (v1[1] - v0[1]);\r\n         \r\n            if (wind <= 0.0)\r\n               continue;\r\n         }\r\n   \r\n         this.add_face(model.vertices, face, group, model.bias);\r\n      }\r\n   };\r\n      \r\n   this.draw = function(ctx)\r\n   {\r\n      for (var i = bucket.length - 1; i >= 0; i--)\r\n         for (var c = bucket[i]; c != null; c = c.next) {\r\n            ctx.fillStyle = c.color;\r\n   \r\n            var b = bound[c.group];\r\n                  \r\n            if (c.type == cell_type_face) {\r\n               ctx.beginPath();\r\n   \r\n               var vertices0 = c.vertices[0];\r\n               var vertices1 = c.vertices[1];\r\n               var thresh = vertices0.length;            \r\n                           \r\n               for (var k = 0; k < c.face.indices.length; k++) {\r\n                  var index = c.face.indices[k];\r\n   \r\n                  var x, y;\r\n                  \r\n                  if (index < thresh) {\r\n                     x = vertices0[index][0];\r\n                     y = vertices0[index][1];\r\n                  } else {\r\n                     x = vertices1[index - thresh][0];\r\n                     y = vertices1[index - thresh][1];\r\n                  }\r\n\r\n                  if (this.log) {\r\n                     document.write(x + \", \" + y + \"<br>\");\r\n                  }\r\n                                    \r\n                  if (x < b.xmin)\r\n                     b.xmin = x;\r\n                  if (x > b.xmax)\r\n                     b.xmax = x;\r\n                  if (y < b.ymin)\r\n                     b.ymin = y;\r\n                  if (y > b.ymax)\r\n                     b.ymax = y;\r\n   \r\n                  if (k == 0)\r\n                     ctx.moveTo(x, y);\r\n                  else\r\n                     ctx.lineTo(x, y);\r\n               }\r\n\r\n               ctx.fill();\r\n            } else {\r\n               var size = c.size;\r\n               \r\n               var x = c.vertex[0] - size / 2;\r\n               var y = c.vertex[1] - size / 2;\r\n               \r\n               if (x < b.xmin)\r\n                  b.xmin = x;\r\n               if (x + size - 1 > b.xmax)\r\n                  b.xmax = x + size - 1;\r\n               if (y < b.ymin)\r\n                  b.ymin = y;\r\n               if (y + size - 1 > b.ymax)\r\n                  b.ymax = y + size - 1;\r\n                  \r\n               ctx.fillRect(Math.floor(x), Math.floor(y), size, size);\r\n            }\r\n         }\r\n   };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://Game/./j3d/sort.js?");

/***/ }),

/***/ "./j3d/util.js":
/*!*********************!*\
  !*** ./j3d/util.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   j3d_util_make2darray: () => (/* binding */ j3d_util_make2darray),\n/* harmony export */   j3d_util_makeobjectarray: () => (/* binding */ j3d_util_makeobjectarray),\n/* harmony export */   j3d_util_rgbacolor: () => (/* binding */ j3d_util_rgbacolor),\n/* harmony export */   j3d_util_rgbcolor: () => (/* binding */ j3d_util_rgbcolor)\n/* harmony export */ });\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\nfunction j3d_util_make2darray(d1, d2)\r\n{\r\n   var res = new Array(d1);\r\n   \r\n   for (var i = 0; i < d1; i++)\r\n      res[i] = new Array(d2);\r\n      \r\n   return res;\r\n}\r\n\r\nfunction j3d_util_makeobjectarray(d)\r\n{\r\n   var res = new Array(d);\r\n   \r\n   for (var i = 0; i < d; i++)\r\n      res[i] = new Object();\r\n      \r\n   return res;\r\n}\r\n\r\nfunction j3d_util_rgbcolor(r, g, b)\r\n{\r\n   var r = Math.floor(r);\r\n   var g = Math.floor(g);\r\n   var b = Math.floor(b);\r\n   \r\n   if (r > 255)\r\n      r = 255;\r\n   if (g > 255)\r\n      g = 255;\r\n   if (b > 255)\r\n      b = 255;\r\n\r\n   return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n}\r\n\r\nfunction j3d_util_rgbacolor(r, g, b, a)\r\n{\r\n   var r = Math.floor(r);\r\n   var g = Math.floor(g);\r\n   var b = Math.floor(b);\r\n   \r\n   if (r > 255)\r\n      r = 255;\r\n   if (g > 255)\r\n      g = 255;\r\n   if (b > 255)\r\n      b = 255;\r\n\r\n   if (a < 0.0)\r\n      a = 0.0;\r\n   if (a > 1.0)\r\n      a = 1.0;\r\n\r\n   return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\r\n}\r\n\r\n\n\n//# sourceURL=webpack://Game/./j3d/util.js?");

/***/ }),

/***/ "./j3d/vector.js":
/*!***********************!*\
  !*** ./j3d/vector.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   j3d_vector_add: () => (/* binding */ j3d_vector_add),\n/* harmony export */   j3d_vector_blend: () => (/* binding */ j3d_vector_blend),\n/* harmony export */   j3d_vector_copy: () => (/* binding */ j3d_vector_copy),\n/* harmony export */   j3d_vector_cross: () => (/* binding */ j3d_vector_cross),\n/* harmony export */   j3d_vector_dot: () => (/* binding */ j3d_vector_dot),\n/* harmony export */   j3d_vector_magnitude: () => (/* binding */ j3d_vector_magnitude),\n/* harmony export */   j3d_vector_multiply: () => (/* binding */ j3d_vector_multiply),\n/* harmony export */   j3d_vector_normalize: () => (/* binding */ j3d_vector_normalize),\n/* harmony export */   j3d_vector_subtract: () => (/* binding */ j3d_vector_subtract)\n/* harmony export */ });\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\nfunction j3d_vector_copy(a)\r\n{\r\n   return [a[0], a[1], a[2], a[3]];\r\n}\r\n\r\nfunction j3d_vector_dot(a, b)\r\n{\r\n   return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\nfunction j3d_vector_magnitude(a)\r\n{\r\n   var a0 = a[0];\r\n   var a1 = a[1];\r\n   var a2 = a[2];\r\n   var a3 = a[3];\r\n   \r\n   return Math.sqrt(a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3);\r\n}\r\n\r\nfunction j3d_vector_add(a, b, d)\r\n{  \r\n   if (d == null)\r\n      return [a[0] + b[0], \r\n              a[1] + b[1], \r\n              a[2] + b[2], \r\n              a[3] + b[3]];\r\n   else {\r\n      d[0] = a[0] + b[0];   \r\n      d[1] = a[1] + b[1];   \r\n      d[2] = a[2] + b[2];   \r\n      d[3] = a[3] + b[3];   \r\n      \r\n      return d;\r\n   }\r\n}\r\n\r\nfunction j3d_vector_subtract(a, b, d)\r\n{  \r\n   if (d == null)\r\n      return [a[0] - b[0], \r\n              a[1] - b[1], \r\n              a[2] - b[2], \r\n              a[3] - b[3]];\r\n   else {\r\n      d[0] = a[0] - b[0];   \r\n      d[1] = a[1] - b[1];   \r\n      d[2] = a[2] - b[2];   \r\n      d[3] = a[3] - b[3];   \r\n      \r\n      return d;\r\n   }\r\n}\r\n\r\nfunction j3d_vector_multiply(a, b, d)\r\n{  \r\n   if (d == null)\r\n      return [a[0] * b, \r\n              a[1] * b, \r\n              a[2] * b, \r\n              a[3] * b];\r\n   else {\r\n      d[0] = a[0] * b;   \r\n      d[1] = a[1] * b;   \r\n      d[2] = a[2] * b;   \r\n      d[3] = a[3] * b;   \r\n      \r\n      return d;\r\n   }\r\n}\r\n\r\nfunction j3d_vector_blend(a, b, f, d)\r\n{  \r\n   var e = 1 - f;\r\n   \r\n   if (d == null)\r\n      return [e * a[0] + f * b[0], \r\n              e * a[1] + f * b[1], \r\n              e * a[2] + f * b[2], \r\n              e * a[3] + f * b[3]];\r\n   else {\r\n      d[0] = e * a[0] + f * b[0];\r\n      d[1] = e * a[1] + f * b[1];\r\n      d[2] = e * a[2] + f * b[2];\r\n      d[3] = e * a[3] + f * b[3];\r\n      \r\n      return d;\r\n   }\r\n}\r\n\r\nfunction j3d_vector_cross(a, b, d)\r\n{\r\n   if (d == null)\r\n      return [a[1] * b [2] - a[2] * b[1], \r\n              a[2] * b [0] - a[0] * b[2], \r\n              a[0] * b [1] - a[1] * b[0], \r\n              0.0];\r\n   else {\r\n      d[0] = a[1] * b [2] - a[2] * b[1];\r\n      d[1] = a[2] * b [0] - a[0] * b[2];\r\n      d[2] = a[0] * b [1] - a[1] * b[0];\r\n      d[3] = 0.0;\r\n      \r\n      return d;\r\n   }\r\n}\r\n\r\nfunction j3d_vector_normalize(a, d)\r\n{\r\n   var a0 = a[0];\r\n   var a1 = a[1];\r\n   var a2 = a[2];\r\n   var a3 = a[3];\r\n   \r\n   var len = Math.sqrt(a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3);\r\n   \r\n   if (d == null)\r\n      return [a0 / len, \r\n              a1 / len, \r\n              a2 / len, \r\n              a3 / len];\r\n   else {\r\n      d[0] = a0 / len;   \r\n      d[1] = a1 / len;   \r\n      d[2] = a2 / len;   \r\n      d[3] = a3 / len;   \r\n      \r\n      return d;\r\n   }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://Game/./j3d/vector.js?");

/***/ }),

/***/ "./lander/camera.js":
/*!**************************!*\
  !*** ./lander/camera.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lander_camera_eye: () => (/* binding */ lander_camera_eye),\n/* harmony export */   lander_camera_matrix: () => (/* binding */ lander_camera_matrix)\n/* harmony export */ });\n/* harmony import */ var _j3d_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../j3d/matrix */ \"./j3d/matrix.js\");\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./physics */ \"./lander/physics.js\");\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\n\r\n \r\n\r\n\r\nvar camry = 0;\r\n\r\nvar lander_camera_rx = 0.4;\r\nvar lander_camera_dist = 20;\r\n\r\nfunction lander_camera_matrix(x, y, z, r_y)\r\n{\r\n   camry += (r_y-camry) * 0.3;\r\n   \r\n   var t1 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_translate)(-x, -y, -z);\r\n   var ry = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_rotate_y)(camry);\r\n   var rx = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_rotate_x)(lander_camera_rx);\r\n   var t2 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_translate)(0, 0, lander_camera_dist);\r\n   \r\n   var p  = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_project)(10, 10, 5, 25);\r\n   \r\n   var m = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(t1, ry);\r\n   var n = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(m, rx);\r\n   var o = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(n, t2);\r\n\r\n   var p = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(o, p);\r\n\r\n   var tf = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_translate)(0.5, 0.25, 0);\r\n   var s1 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_scale)(1024, 768, 1);\r\n\r\n   var kl = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(p, tf);\r\n   var kr = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(kl, s1);\r\n                     \r\n   return kr;\r\n}\r\n\r\nfunction lander_camera_eye()\r\n{\r\n   var t2 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_translate)(0, 0, -lander_camera_dist);\r\n   var rx = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_rotate_x)(-lander_camera_rx);\r\n   var ry = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_rotate_y)(-camry);\r\n   var t1 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_translate)(_physics__WEBPACK_IMPORTED_MODULE_1__.lander_ship.p[0], _physics__WEBPACK_IMPORTED_MODULE_1__.lander_ship.p[1], _physics__WEBPACK_IMPORTED_MODULE_1__.lander_ship.p[2]);\r\n   \r\n   return (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)([[0, 0, 0, 1]], (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)((0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)((0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(t2, rx), ry), t1))[0];\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://Game/./lander/camera.js?");

/***/ }),

/***/ "./lander/globals.js":
/*!***************************!*\
  !*** ./lander/globals.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lander_alien_state_dead: () => (/* binding */ lander_alien_state_dead),\n/* harmony export */   lander_alien_state_flying: () => (/* binding */ lander_alien_state_flying),\n/* harmony export */   lander_clip: () => (/* binding */ lander_clip),\n/* harmony export */   lander_light: () => (/* binding */ lander_light),\n/* harmony export */   lander_sort: () => (/* binding */ lander_sort)\n/* harmony export */ });\n/* harmony import */ var _j3d_clip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../j3d/clip */ \"./j3d/clip.js\");\n/* harmony import */ var _j3d_sort__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../j3d/sort */ \"./j3d/sort.js\");\n/* harmony import */ var _j3d_light__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../j3d/light */ \"./j3d/light.js\");\n/* harmony import */ var _j3d_vector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../j3d/vector */ \"./j3d/vector.js\");\n\n\n\n\n\nconst lander_clip = new _j3d_clip__WEBPACK_IMPORTED_MODULE_0__.j3d_clip([[1, 0, 0, 0],\n                                  [0, 0, 1, 0],\n                                  [-1, 0, 0, 0],\n                                  [0, 0, -1, 0]]);\nconst lander_sort = new _j3d_sort__WEBPACK_IMPORTED_MODULE_1__.j3d_sort(64, 200, 2);\nconst lander_light = new _j3d_light__WEBPACK_IMPORTED_MODULE_2__.j3d_light((0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_normalize)([1.0, -1.0, 0.0, 0.0]));\nconst lander_alien_state_flying = 0;\nconst lander_alien_state_dead   = 1;\n\n\n\n//# sourceURL=webpack://Game/./lander/globals.js?");

/***/ }),

/***/ "./lander/ground.js":
/*!**************************!*\
  !*** ./lander/ground.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lander_ground_draw: () => (/* binding */ lander_ground_draw),\n/* harmony export */   lander_ground_height: () => (/* binding */ lander_ground_height),\n/* harmony export */   lander_ground_init_map: () => (/* binding */ lander_ground_init_map),\n/* harmony export */   lander_ground_make: () => (/* binding */ lander_ground_make),\n/* harmony export */   lander_ground_mask: () => (/* binding */ lander_ground_mask),\n/* harmony export */   lander_ground_pad_x: () => (/* binding */ lander_ground_pad_x),\n/* harmony export */   lander_ground_pad_z: () => (/* binding */ lander_ground_pad_z),\n/* harmony export */   lander_ground_range: () => (/* binding */ lander_ground_range),\n/* harmony export */   lander_ground_size: () => (/* binding */ lander_ground_size)\n/* harmony export */ });\n/* harmony import */ var _j3d_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../j3d/matrix */ \"./j3d/matrix.js\");\n/* harmony import */ var _j3d_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../j3d/model */ \"./j3d/model.js\");\n/* harmony import */ var _j3d_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../j3d/util */ \"./j3d/util.js\");\n/* harmony import */ var _j3d_vector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../j3d/vector */ \"./j3d/vector.js\");\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./physics */ \"./lander/physics.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./globals */ \"./lander/globals.js\");\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\nconst lander_ground_size = 32;\r\nconst lander_ground_mask = lander_ground_size - 1;\r\nconst lander_ground_model_size = 12;\r\nconst lander_ground_vscale = 8;\r\n\r\nconst lander_ground_pad_x = 14;\r\nconst lander_ground_pad_z = 14;\r\n\r\nconst lander_ground_range = (lander_ground_model_size - 1) / 2;\r\nconst lander_ground = lander_ground_make(lander_ground_size);\r\n\r\n\r\nfunction lander_ground_make_pad_alt(alt, x, z)\r\n{\r\n   var avg = 0;\r\n   \r\n   for (var ox = 0; ox <= 4; ox++)\r\n      for (var oz = 0; oz <= 4; oz++)\r\n         avg += alt[x + ox][z + oz];\r\n      \r\n   avg /= 25;\r\n \r\n   if (avg < 0.3)\r\n      avg = 0.3;\r\n     \r\n   for (var ox = 0; ox <= 4; ox++)\r\n      for (var oz = 0; oz <= 4; oz++)\r\n         alt[x + ox][z + oz] = avg;\r\n}\r\n               \r\nfunction lander_ground_make_pad_mat(mat, x, z)\r\n{\r\n   for (var ox = 0; ox < 4; ox++)\r\n      for (var oz = 0; oz < 4; oz++) {\r\n         var grey = (Math.random() + 3.0) / 8.0;\r\n      \r\n         mat[x + ox][z + oz] = {static: _globals__WEBPACK_IMPORTED_MODULE_5__.lander_light.light_face([0.0, -1.0, 0.0, 0.0], null, {ambient: [0, 0, 0], diffuse: [grey, grey, grey], specular: [0, 0, 0], phong: 0.0})};\r\n      }\r\n}\r\n\r\nfunction lander_ground_make(size)\r\n{\r\n   /*\r\n      build altitude\r\n   */\r\n   \r\n   var alt = (0,_j3d_util__WEBPACK_IMPORTED_MODULE_2__.j3d_util_make2darray)(size, size);\r\n\r\n   alt[0][0] = 0.0;\r\n   \r\n   for (var len = size; len > 1; len /= 2) {\r\n      for (var x = 0; x < size; x += len) {\r\n         for (var y = 0; y < size; y += len) {\r\n            var v0 = alt[x][y];\r\n            var v1 = alt[(x + len) % size][y];\r\n            var v2 = alt[x][(y + len) % size];\r\n            var v3 = alt[(x + len) % size][(y + len) % size];\r\n   \r\n            alt[x + len / 2][y] = (v0 + v1) / 2 + (Math.random() - 0.5) * len / lander_ground_vscale;\r\n            alt[x][y + len / 2] = (v0 + v2) / 2 + (Math.random() - 0.5) * len / lander_ground_vscale;\r\n            alt[x + len / 2][y + len / 2] = (v0 + v1 + v2 + v3) / 4 + (Math.random() - 0.5) * len / lander_ground_vscale;\r\n         }\r\n      }\r\n   }\r\n\r\n   /* \r\n      clip to sea level\r\n   */\r\n\r\n   for (var x = 0; x < size; x++)\r\n      for (var y = 0; y < size; y++) {\r\n         if (alt[x][y] < 0)\r\n            alt[x][y] = 0;\r\n      }\r\n   \r\n   lander_ground_make_pad_alt(alt, lander_ground_pad_x, lander_ground_pad_z);\r\n   \r\n   /*\r\n      build normals and centers\r\n   */\r\n\r\n   var nor = (0,_j3d_util__WEBPACK_IMPORTED_MODULE_2__.j3d_util_make2darray)(size, size);\r\n   var cen = (0,_j3d_util__WEBPACK_IMPORTED_MODULE_2__.j3d_util_make2darray)(size, size);\r\n\r\n   for (var i = 0; i < size; i++) \r\n      for (var j = 0; j < size; j++) {\r\n         var a0 = alt[i][j];\r\n         var a1 = alt[(i + 1) % size][j];\r\n         var a2 = alt[i][(j + 1) % size];\r\n         var a3 = alt[(i + 1) % size][(j + 1) % size];\r\n\r\n         nor[i][j] = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_normalize)((0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_cross)([1, a0 - a1, 0, 0], [0, a0 - a2, 1, 0]));\r\n         cen[i][j] = -(a0 + a1 + a2 + a3) / 4;\r\n      }\r\n\r\n   /*\r\n      choose colors\r\n   */\r\n\r\n   _globals__WEBPACK_IMPORTED_MODULE_5__.lander_light.transform((0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_identity)());\r\n\r\n   var mat = (0,_j3d_util__WEBPACK_IMPORTED_MODULE_2__.j3d_util_make2darray)(size, size);\r\n   var tre = (0,_j3d_util__WEBPACK_IMPORTED_MODULE_2__.j3d_util_make2darray)(size, size);\r\n\r\n   for (var x = 0; x < size; x++)\r\n      for (var z = 0; z < size; z++) {               \r\n            var a0 = alt[x][z];\r\n            var a1 = alt[(x + 1) % size][z];\r\n            var a2 = alt[x][(z + 1) % size];\r\n            var a3 = alt[(x + 1) % size][(z + 1) % size];\r\n         \r\n            if (a0 <= 0 && a1 <= 0 && a2 <= 0 && a3 <= 0) {\r\n               var r = (Math.random() + 1.0) / 16.0;\r\n               var g = (Math.random() + 1.0) / 16.0;\r\n               var b = (Math.random() + 1.0) / 2.0;\r\n            \r\n               mat[x][z] = {ambient: [0, 0, 0], diffuse: [r, g, b], specular: [0.8, 0.8, 0.8], phong: 4.0};\r\n               tre[x][z] = null;\r\n            } else {\r\n               var tone = Math.random();\r\n               \r\n               var r = tone;\r\n               var g = 1.0 - tone / 4.0;\r\n               var b = 0.0;\r\n\r\n               mat[x][z] = {static: _globals__WEBPACK_IMPORTED_MODULE_5__.lander_light.light_face(nor[x][z], null, {ambient: [0, 0, 0], diffuse: [r, g, b], specular: [0, 0, 0], phong: 0.0})};\r\n               tre[x][z] = Math.random() > 0.95 ? Math.random() * Math.PI * 2 : null;\r\n            }\r\n      }\r\n\r\n   lander_ground_make_pad_mat(mat, lander_ground_pad_x, lander_ground_pad_z);\r\n      \r\n   return {altitude : alt, materials : mat, normals : nor, centers : cen, trees : tre};\r\n}\r\n\r\nfunction lander_ground_make_model(size)\r\n{\r\n   var model = {vertices: [new Array((size + 1) * (size + 1))],\r\n                normals: [[0, -1, 0, 0]],\r\n                centers: new Array(size * size),\r\n                faces: new Array(size * size)};\r\n\r\n   for (var x = 0; x < size + 1; x++)\r\n      for (var z = 0; z < size + 1; z++) \r\n         model.vertices[0][x + z * (size + 1)] = [x, 0, z, 1];\r\n\r\n   for (var x = 0; x < size; x++)\r\n      for (var z = 0; z < size; z++) {\r\n         model.centers[x + z * size] = [x + 0.5, 0, z + 0.5, 1];\r\n\r\n         model.faces[x + z * size] = {indices: new Array(4)};\r\n\r\n         model.faces[x + z * size].indices[0] = x + z * (size + 1);\r\n         model.faces[x + z * size].indices[1] = x + (z + 1) * (size + 1);\r\n         model.faces[x + z * size].indices[2] = (x + 1) + (z + 1) * (size + 1);\r\n         model.faces[x + z * size].indices[3] = (x + 1) + z * (size + 1);\r\n         \r\n         model.faces[x + z * size].normal = 0;\r\n         model.faces[x + z * size].center = x + z * size;\r\n\r\n         var clip = 0;\r\n\r\n         if (x == size - 1)\r\n            clip |= 1;\r\n         if (z == size - 1)\r\n            clip |= 2;\r\n         if (x == 0)\r\n            clip |= 4;\r\n         if (z == 0)\r\n            clip |= 8;\r\n\r\n         model.faces[x + z * size].clip = clip;\r\n         model.faces[x + z * size].cull = false;\r\n      }\r\n\r\n   return model;\r\n}\r\n\r\nvar lander_ground_model = lander_ground_make_model(lander_ground_model_size);\r\n\r\nvar lander_ground_prev_x = 1000000;\r\nvar lander_ground_prev_z = 1000000;\r\n\r\nfunction lander_ground_setup_model(x, z)\r\n{\r\n   x = Math.floor(x - lander_ground_model_size / 2 + 0.5);\r\n   z = Math.floor(z - lander_ground_model_size / 2 + 0.5);\r\n \r\n   if (x != lander_ground_prev_x || z != lander_ground_prev_z) {\r\n      lander_ground_prev_x = x;\r\n      lander_ground_prev_z = z;\r\n     \r\n      var vertices = lander_ground_model.vertices[0];\r\n      \r\n      for (var i = 0; i < lander_ground_model_size + 1; i++) {\r\n         var altitude = lander_ground.altitude[x + i & lander_ground_mask];\r\n            \r\n         for (var j = 0; j < lander_ground_model_size + 1; j++)\r\n            vertices[i + j * (lander_ground_model_size + 1)][1] = - altitude[z + j & lander_ground_mask];\r\n      }\r\n \r\n      var centers = lander_ground_model.centers;\r\n      var faces = lander_ground_model.faces;\r\n        \r\n      for (var i = 0; i < lander_ground_model_size; i++) {\r\n         var ground_centers = lander_ground.centers[x + i & lander_ground_mask];\r\n         var ground_materials = lander_ground.materials[x + i & lander_ground_mask];\r\n\r\n         for (var j = 0; j < lander_ground_model_size; j++) {\r\n            centers[i + j * lander_ground_model_size][1] = ground_centers[z + j & lander_ground_mask];\r\n            \r\n            faces[i + j * lander_ground_model_size].material = ground_materials[z + j & lander_ground_mask];\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\nfunction lander_ground_setup_clip(x, z)\r\n{\r\n   _globals__WEBPACK_IMPORTED_MODULE_5__.lander_clip.planes[0][3] = -(x + lander_ground_range);\r\n   _globals__WEBPACK_IMPORTED_MODULE_5__.lander_clip.planes[1][3] = -(z + lander_ground_range);\r\n   _globals__WEBPACK_IMPORTED_MODULE_5__.lander_clip.planes[2][3] = (x - lander_ground_range);\r\n   _globals__WEBPACK_IMPORTED_MODULE_5__.lander_clip.planes[3][3] = (z - lander_ground_range);\r\n}\r\n\r\nfunction lander_ground_init_map(map_ctx)\r\n{\r\n   var scale = 64 / lander_ground_size;\r\n   \r\n   for (var x = 0; x < lander_ground_size; x++)\r\n      for (var z = 0; z < lander_ground_size; z++) {\r\n         var staticPos = lander_ground.materials[x][z].static;\r\n         \r\n         if (staticPos === null)\r\n            staticPos = \"rgb(0, 0, 128)\";\r\n         \r\n         map_ctx.fillStyle = staticPos;\r\n         map_ctx.fillRect(x * scale, (lander_ground_size - 1 - z) * scale, scale, scale);\r\n      }\r\n}\r\n\r\nfunction lander_ground_matrix(x, z)\r\n{\r\n   x = Math.floor(x - lander_ground_range);\r\n   z = Math.floor(z - lander_ground_range);\r\n   \r\n   return (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_translate)(x, 0, z);\r\n}\r\n\r\nfunction lander_ground_height(x, z)\r\n{\r\n   var xt = Math.floor(x);\r\n   var zt = Math.floor(z);\r\n   \r\n   var xf = x - xt;\r\n   var zf = z - zt;\r\n   \r\n   var a0 = - lander_ground.altitude[xt & lander_ground_mask][zt & lander_ground_mask];\r\n   var a1 = - lander_ground.altitude[xt + 1 & lander_ground_mask][zt & lander_ground_mask];\r\n   var a2 = - lander_ground.altitude[xt & lander_ground_mask][zt + 1 & lander_ground_mask];\r\n   var a3 = - lander_ground.altitude[xt + 1 & lander_ground_mask][zt + 1 & lander_ground_mask];\r\n   \r\n   return (a0 * (1 - xf) + a1 * xf) * (1 - zf) + (a2 * (1 - xf) + a3 * xf) * zf;\r\n}\r\n\r\nvar lander_ground_model1 = null;\r\nvar lander_ground_model2 = null;\r\nvar lander_ground_model3 = null;\r\n   \r\nfunction lander_ground_draw(cam)\r\n{\r\n   lander_ground_setup_model(_physics__WEBPACK_IMPORTED_MODULE_4__.lander_ship.p[0], _physics__WEBPACK_IMPORTED_MODULE_4__.lander_ship.p[2]);\r\n   lander_ground_setup_clip(_physics__WEBPACK_IMPORTED_MODULE_4__.lander_ship.p[0], _physics__WEBPACK_IMPORTED_MODULE_4__.lander_ship.p[2]);\r\n   \r\n   var mat = lander_ground_matrix(_physics__WEBPACK_IMPORTED_MODULE_4__.lander_ship.p[0], _physics__WEBPACK_IMPORTED_MODULE_4__.lander_ship.p[2]);\r\n   \r\n   lander_ground_model1 = _globals__WEBPACK_IMPORTED_MODULE_5__.lander_clip.clip_model(lander_ground_model, mat, lander_ground_model1);\r\n   _globals__WEBPACK_IMPORTED_MODULE_5__.lander_light.light_model(lander_ground_model1, mat);\r\n   lander_ground_model2 = (0,_j3d_model__WEBPACK_IMPORTED_MODULE_1__.j3d_model_multiply)(lander_ground_model1, (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(mat, cam), lander_ground_model2);\r\n   lander_ground_model3 = (0,_j3d_model__WEBPACK_IMPORTED_MODULE_1__.j3d_model_dehomogenize)(lander_ground_model2, lander_ground_model3);\r\n   \r\n   _globals__WEBPACK_IMPORTED_MODULE_5__.lander_sort.add_model(lander_ground_model3, 0);\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://Game/./lander/ground.js?");

/***/ }),

/***/ "./lander/hud.js":
/*!***********************!*\
  !*** ./lander/hud.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lander_hud_draw: () => (/* binding */ lander_hud_draw)\n/* harmony export */ });\n/* harmony import */ var _j3d_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../j3d/util */ \"./j3d/util.js\");\n/* harmony import */ var _ground__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ground */ \"./lander/ground.js\");\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./physics */ \"./lander/physics.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./globals */ \"./lander/globals.js\");\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst lander_hud_dotsize = 3;\r\nconst lander_hud_dotedge = 64 - lander_hud_dotsize;\r\n\r\nfunction lander_hud_dot(ctx, x, y)\r\n{\r\n   var scale = 64 / _ground__WEBPACK_IMPORTED_MODULE_1__.lander_ground_size;\r\n   \r\n   x = Math.floor(x * scale + 0.5 - lander_hud_dotsize / 2) & 63;\r\n   y = Math.floor(y * scale + 0.5 - lander_hud_dotsize / 2);\r\n\r\n   y = 64 - y - lander_hud_dotsize & 63;\r\n\r\n   if (x > lander_hud_dotedge) {\r\n      if (y > lander_hud_dotedge) {\r\n         ctx.fillRect(400 - 64 - 2 + x, 2 + y, 64-x, 64-y);\r\n         ctx.fillRect(400 - 64 - 2 + 0, 2 + y, x-lander_hud_dotedge, 64-y);\r\n         ctx.fillRect(400 - 64 - 2 + x, 2 + 0, 64-x, y-lander_hud_dotedge);\r\n         ctx.fillRect(400 - 64 - 2 + 0, 2 + 0, x-lander_hud_dotedge, y-lander_hud_dotedge);\r\n      } else {\r\n         ctx.fillRect(400 - 64 - 2 + x, 2 + y, 64-x, lander_hud_dotsize);\r\n         ctx.fillRect(400 - 64 - 2 + 0, 2 + y, x-lander_hud_dotedge, lander_hud_dotsize);\r\n      }\r\n   } else {\r\n      if (y > lander_hud_dotedge) {\r\n         ctx.fillRect(400 - 64 - 2 + x, 2 + y, lander_hud_dotsize, 64-y);\r\n         ctx.fillRect(400 - 64 - 2 + x, 2 + 0, lander_hud_dotsize, y-lander_hud_dotedge);\r\n      } else {\r\n         ctx.fillRect(400 - 64 - 2 + x, 2 + y, lander_hud_dotsize, lander_hud_dotsize);\r\n      }\r\n   }\r\n}\r\n\r\nvar lander_hud_health = 1.0;\r\n\r\nfunction lander_hud_draw(ctx, map)\r\n{\r\n   var fuel = _physics__WEBPACK_IMPORTED_MODULE_2__.lander_ship.get_fuel();\r\n   var health = _physics__WEBPACK_IMPORTED_MODULE_2__.lander_ship.get_health();\r\n\r\n   if (health < lander_hud_health)\r\n      lander_hud_health = Math.max(health, lander_hud_health - 0.01);\r\n   if (health > lander_hud_health)\r\n      lander_hud_health = Math.min(health, lander_hud_health + 0.01);\r\n      \r\n   var bar_width;\r\n   \r\n   bar_width = 300 * fuel;\r\n   \r\n   ctx.fillStyle = \"rgb(255, 0, 0)\";\r\n   ctx.fillRect(2, 2, bar_width, 1);\r\n   ctx.fillStyle = \"rgb(192, 0, 0)\";\r\n   ctx.fillRect(2, 3, bar_width, 4);\r\n   ctx.fillStyle = \"rgb(128, 0, 0)\";\r\n   ctx.fillRect(2, 7, bar_width, 1);\r\n   ctx.fillStyle = \"rgb(64, 0, 0)\";\r\n   ctx.fillRect(2 + bar_width, 2, 300 - bar_width, 6);\r\n\r\n   bar_width = 300 * lander_hud_health;\r\n   \r\n   ctx.fillStyle = \"rgb(0, 255, 0)\";\r\n   ctx.fillRect(2, 10, bar_width, 1);\r\n   ctx.fillStyle = \"rgb(0, 192, 0)\";\r\n   ctx.fillRect(2, 11, bar_width, 4);\r\n   ctx.fillStyle = \"rgb(0, 128, 0)\";\r\n   ctx.fillRect(2, 15, bar_width, 1);\r\n   ctx.fillStyle = \"rgb(0, 64, 0)\";\r\n   ctx.fillRect(2 + bar_width, 10, 300 - bar_width, 6);\r\n  \r\n   ctx.drawImage(map, 400 - 64 - 2, 2);\r\n   \r\n   ctx.fillStyle = \"rgb(255, 255, 255)\";\r\n   lander_hud_dot(ctx, _physics__WEBPACK_IMPORTED_MODULE_2__.lander_ship.p[0], _physics__WEBPACK_IMPORTED_MODULE_2__.lander_ship.p[2]);\r\n   \r\n   for (var i = 0; i < _physics__WEBPACK_IMPORTED_MODULE_2__.lander_aliens.length; i++) {\r\n      var alien = _physics__WEBPACK_IMPORTED_MODULE_2__.lander_aliens[i];\r\n      \r\n      if (alien.get_state() != _globals__WEBPACK_IMPORTED_MODULE_3__.lander_alien_state_dead) {\r\n         if (alien.alpha < 1.0)\r\n            alien.alpha = Math.min(alien.alpha + 0.05, 1.0);\r\n      \r\n         ctx.fillStyle = (0,_j3d_util__WEBPACK_IMPORTED_MODULE_0__.j3d_util_rgbacolor)(255, 0, 0, alien.alpha);\r\n   \r\n         lander_hud_dot(ctx, alien.p[0], alien.p[2]);\r\n      }\r\n   }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://Game/./lander/hud.js?");

/***/ }),

/***/ "./lander/index.js":
/*!*************************!*\
  !*** ./lander/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lander_camera_eye: () => (/* reexport safe */ _camera__WEBPACK_IMPORTED_MODULE_0__.lander_camera_eye),\n/* harmony export */   lander_camera_matrix: () => (/* reexport safe */ _camera__WEBPACK_IMPORTED_MODULE_0__.lander_camera_matrix),\n/* harmony export */   lander_ground_draw: () => (/* reexport safe */ _ground__WEBPACK_IMPORTED_MODULE_1__.lander_ground_draw),\n/* harmony export */   lander_ground_height: () => (/* reexport safe */ _ground__WEBPACK_IMPORTED_MODULE_1__.lander_ground_height),\n/* harmony export */   lander_ground_init_map: () => (/* reexport safe */ _ground__WEBPACK_IMPORTED_MODULE_1__.lander_ground_init_map),\n/* harmony export */   lander_ground_make: () => (/* reexport safe */ _ground__WEBPACK_IMPORTED_MODULE_1__.lander_ground_make),\n/* harmony export */   lander_hud_draw: () => (/* reexport safe */ _hud__WEBPACK_IMPORTED_MODULE_2__.lander_hud_draw),\n/* harmony export */   lander_input_init: () => (/* reexport safe */ _input__WEBPACK_IMPORTED_MODULE_3__.lander_input_init),\n/* harmony export */   lander_light: () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_5__.lander_light),\n/* harmony export */   lander_physics_draw: () => (/* reexport safe */ _physics__WEBPACK_IMPORTED_MODULE_4__.lander_physics_draw),\n/* harmony export */   lander_physics_init: () => (/* reexport safe */ _physics__WEBPACK_IMPORTED_MODULE_4__.lander_physics_init),\n/* harmony export */   lander_physics_tick: () => (/* reexport safe */ _physics__WEBPACK_IMPORTED_MODULE_4__.lander_physics_tick),\n/* harmony export */   lander_ship: () => (/* reexport safe */ _physics__WEBPACK_IMPORTED_MODULE_4__.lander_ship),\n/* harmony export */   lander_sort: () => (/* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_5__.lander_sort)\n/* harmony export */ });\n/* harmony import */ var _camera__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./camera */ \"./lander/camera.js\");\n/* harmony import */ var _ground__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ground */ \"./lander/ground.js\");\n/* harmony import */ var _hud__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hud */ \"./lander/hud.js\");\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./input */ \"./lander/input.js\");\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./physics */ \"./lander/physics.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./globals */ \"./lander/globals.js\");\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://Game/./lander/index.js?");

/***/ }),

/***/ "./lander/input.js":
/*!*************************!*\
  !*** ./lander/input.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   input: () => (/* binding */ input),\n/* harmony export */   lander_input_init: () => (/* binding */ lander_input_init)\n/* harmony export */ });\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\nconst input = {\r\n   lander_input_lmb_pressed: false,\r\n   lander_input_rmb_pressed: false,          \r\n   lander_input_dx: 0,\r\n   lander_input_dy: 0,\r\n   lander_input_prev_x: 0,\r\n   lander_input_prev_y: 0,\r\n   lander_input_prev_valid: false,\r\n}\r\n\r\n      \r\nfunction lander_input_init()\r\n{\r\n   input.lander_input_lmb_pressed = false;\r\n   input.lander_input_rmb_pressed = false;\r\n            \r\n   input.lander_input_dx = 0;\r\n   input.lander_input_dy = 0;\r\n   \r\n   input.lander_input_prev_valid = false;\r\n\r\n   var canvas = document.getElementById('main_canvas');\r\n      \r\n   canvas.addEventListener('mousedown', lander_input_mouse_down, false);   \r\n   canvas.addEventListener('mouseup', lander_input_mouse_up, false);\r\n   canvas.addEventListener('mousemove', lander_input_mouse_move, false);  \r\n   canvas.addEventListener('mouseout', lander_input_mouse_out, false);   \r\n   \r\n   canvas.oncontextmenu = function() { return false; };\r\n}\r\n\r\nfunction lander_input_mouse_down(e) \r\n{\r\n   switch (e.which) {\r\n   case 1:\r\n      input.lander_input_lmb_pressed = true;\r\n      break;\r\n   case 3:\r\n      input.lander_input_rmb_pressed = true;\r\n      break;\r\n   }\r\n}\r\n\r\nfunction lander_input_mouse_up(e) \r\n{\r\n   switch (e.which) {\r\n   case 1:\r\n      input.lander_input_lmb_pressed = false;\r\n      break;\r\n   case 3:\r\n      input.lander_input_rmb_pressed = false;\r\n      break;\r\n   }\r\n}      \r\n\r\nfunction lander_input_mouse_out(e)\r\n{\r\n   input.lander_input_prev_valid = false;\r\n}\r\n\r\nfunction lander_input_mouse_move(e) \r\n{\r\n   var x = e.layerX;\r\n   var y = e.layerY;\r\n   \r\n   if (input.lander_input_prev_valid) {\r\n      input.lander_input_dx += x - input.lander_input_prev_x;\r\n      input.lander_input_dy += y - input.lander_input_prev_y;\r\n   }\r\n   \r\n   input.lander_input_prev_x = x;\r\n   input.lander_input_prev_y = y;\r\n   input.lander_input_prev_valid = true;\r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://Game/./lander/input.js?");

/***/ }),

/***/ "./lander/models.js":
/*!**************************!*\
  !*** ./lander/models.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alien1_a: () => (/* binding */ alien1_a),\n/* harmony export */   alien1_b: () => (/* binding */ alien1_b),\n/* harmony export */   alien1_c: () => (/* binding */ alien1_c),\n/* harmony export */   lander_model_alien1: () => (/* binding */ lander_model_alien1),\n/* harmony export */   lander_model_debris: () => (/* binding */ lander_model_debris),\n/* harmony export */   lander_model_ship: () => (/* binding */ lander_model_ship)\n/* harmony export */ });\n/* harmony import */ var _j3d_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../j3d/model */ \"./j3d/model.js\");\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\n\r\n\r\n\r\nvar lander_material_pink       = {ambient: [0.5, 0.0, 0.5], diffuse: [0.5, 0.0, 0.5], specular: [1.0, 1.0, 1.0], phong: 4.0};\r\nvar lander_material_purple     = {ambient: [0.3, 0.0, 0.5], diffuse: [0.3, 0.0, 0.5], specular: [1.0, 1.0, 1.0], phong: 4.0};\r\nvar lander_material_darkpurple = {ambient: [0.1, 0.0, 0.3], diffuse: [0.2, 0.0, 0.4], specular: [1.0, 1.0, 1.0], phong: 4.0};\r\n\r\nvar lander_material_green      = {ambient: [0.0, 0.3, 0.0], diffuse: [0.3, 0.8, 0.3], specular: [0.0, 0.0, 0.0], phong: 1.0};\r\nvar lander_material_brown      = {ambient: [0.2, 0.1, 0.0], diffuse: [0.4, 0.2, 0.0], specular: [0.0, 0.0, 0.0], phong: 1.0};\r\n\r\nvar lander_model_ship = {vertices: [[[-0.6,  0.0, -0.5,  1.0],\r\n                                     [ 0.6,  0.0, -0.5,  1.0],\r\n                                     [ 0.3,  0.0,  0.5,  1.0],\r\n                                     [-0.3,  0.0,  0.5,  1.0],\r\n                                     [-0.2, -0.4, -0.5,  1.0],\r\n                                     [ 0.2, -0.4, -0.5,  1.0]]],\r\n                         faces: [{indices: [0, 1, 2, 3], material: lander_material_darkpurple, clip: 0},\r\n                                 {indices: [4, 3, 2, 5], material: lander_material_purple, clip: 0},\r\n                                 {indices: [0, 4, 5, 1], material: lander_material_purple, clip: 0},\r\n                                 {indices: [4, 0, 3], material: lander_material_pink, clip: 0},\r\n                                 {indices: [1, 5, 2], material: lander_material_pink, clip: 0}],\r\n                         bias: -0.04};\r\n\r\n(0,_j3d_model__WEBPACK_IMPORTED_MODULE_0__.j3d_model_make_normals)(lander_model_ship);\r\n(0,_j3d_model__WEBPACK_IMPORTED_MODULE_0__.j3d_model_make_centers)(lander_model_ship);\r\n\r\nconst alien1_a = 0.8;\r\nconst alien1_b = alien1_a * Math.sin(Math.PI / 4);\r\nconst alien1_c = 0.4;\r\n\r\nvar lander_model_alien1 = {vertices: [[[      0.0,       0.0, -alien1_a,  1.0],\r\n                                       [ alien1_b,       0.0, -alien1_b,  1.0],\r\n                                       [ alien1_a,       0.0,       0.0,  1.0],\r\n                                       [ alien1_b,       0.0,  alien1_b,  1.0],\r\n                                       [      0.0,       0.0,  alien1_a,  1.0],\r\n                                       [-alien1_b,       0.0,  alien1_b,  1.0],\r\n                                       [-alien1_a,       0.0,       0.0,  1.0],\r\n                                       [-alien1_b,       0.0, -alien1_b,  1.0],\r\n                                       [      0.0, -alien1_c,       0.0,  1.0],\r\n                                       [      0.0,  alien1_c,       0.0,  1.0]]],\r\n                           faces: [{indices: [0, 8, 1], material: lander_material_purple},\r\n                                   {indices: [1, 8, 2], material: lander_material_pink},\r\n                                   {indices: [2, 8, 3], material: lander_material_purple},\r\n                                   {indices: [3, 8, 4], material: lander_material_pink},\r\n                                   {indices: [4, 8, 5], material: lander_material_purple},\r\n                                   {indices: [5, 8, 6], material: lander_material_pink},\r\n                                   {indices: [6, 8, 7], material: lander_material_purple},\r\n                                   {indices: [7, 8, 0], material: lander_material_pink},\r\n                                   {indices: [1, 9, 0], material: lander_material_pink},\r\n                                   {indices: [2, 9, 1], material: lander_material_purple},\r\n                                   {indices: [3, 9, 2], material: lander_material_pink},\r\n                                   {indices: [4, 9, 3], material: lander_material_purple},\r\n                                   {indices: [5, 9, 4], material: lander_material_pink},\r\n                                   {indices: [6, 9, 5], material: lander_material_purple},\r\n                                   {indices: [7, 9, 6], material: lander_material_pink},\r\n                                   {indices: [0, 9, 7], material: lander_material_purple}]};\r\n\r\n(0,_j3d_model__WEBPACK_IMPORTED_MODULE_0__.j3d_model_make_normals)(lander_model_alien1);\r\n(0,_j3d_model__WEBPACK_IMPORTED_MODULE_0__.j3d_model_make_centers)(lander_model_alien1);\r\n\r\nconst tree_a = 0.2;\r\nconst tree_b = tree_a * Math.sin(Math.PI / 6);\r\nconst tree_c = tree_a * Math.cos(Math.PI / 6);\r\n\r\nconst tree_d = 0.5;\r\nconst tree_e = tree_d * Math.sin(Math.PI / 6);\r\nconst tree_f = tree_d * Math.cos(Math.PI / 6);\r\n\r\nconst tree_g = 0.2;\r\nconst tree_h = tree_g + 1.5;\r\n\r\nvar lander_model_tree = {vertices: [[[    0.0,     0.0,  tree_a,  1.0],\r\n                                     [-tree_c,     0.0, -tree_b,  1.0],\r\n                                     [ tree_c,     0.0, -tree_b,  1.0],\r\n                                     [    0.0, -tree_g,  tree_a,  1.0],\r\n                                     [-tree_c, -tree_g, -tree_b,  1.0],\r\n                                     [ tree_c, -tree_g, -tree_b,  1.0],\r\n                                     [    0.0, -tree_g,  tree_d,  1.0],\r\n                                     [-tree_f, -tree_g, -tree_e,  1.0],\r\n                                     [ tree_f, -tree_g, -tree_e,  1.0],\r\n                                     [    0.0, -tree_h,     0.0,  1.0]]],\r\n                         faces: [{indices: [0, 3, 4, 1], material: lander_material_brown, clip: 0},\r\n                                 {indices: [1, 4, 5, 2], material: lander_material_brown, clip: 0},\r\n                                 {indices: [2, 5, 3, 0], material: lander_material_brown, clip: 0},\r\n                                 {indices: [6, 9, 7], material: lander_material_green, bias: -0.02, clip: 0},\r\n                                 {indices: [7, 9, 8], material: lander_material_green, bias: -0.02, clip: 0},\r\n                                 {indices: [8, 9, 6], material: lander_material_green, bias: -0.02, clip: 0}],\r\n                         bias: -0.02};\r\n\r\n(0,_j3d_model__WEBPACK_IMPORTED_MODULE_0__.j3d_model_make_normals)(lander_model_tree);\r\n(0,_j3d_model__WEBPACK_IMPORTED_MODULE_0__.j3d_model_make_centers)(lander_model_tree);\r\n\r\nconst debris_a = 0.4;\r\nconst debris_b = debris_a * Math.sin(Math.PI / 6);\r\nconst debris_c = debris_a * Math.cos(Math.PI / 6);\r\n\r\nvar lander_model_debris = {vertices: [[[    0.0,     0.0,  debris_a,  1.0],\r\n                                       [-debris_c,     0.0, -debris_b,  1.0],\r\n                                       [ debris_c,     0.0, -debris_b,  1.0]]],\r\n                           faces: [{indices: [0, 1, 2], material: lander_material_pink},\r\n                                   {indices: [0, 2, 1], material: lander_material_purple}]};\r\n\r\n(0,_j3d_model__WEBPACK_IMPORTED_MODULE_0__.j3d_model_make_normals)(lander_model_debris);\r\n(0,_j3d_model__WEBPACK_IMPORTED_MODULE_0__.j3d_model_make_centers)(lander_model_debris);\r\n\r\n\r\n\n\n//# sourceURL=webpack://Game/./lander/models.js?");

/***/ }),

/***/ "./lander/physics.js":
/*!***************************!*\
  !*** ./lander/physics.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lander_aliens: () => (/* binding */ lander_aliens),\n/* harmony export */   lander_physics_draw: () => (/* binding */ lander_physics_draw),\n/* harmony export */   lander_physics_init: () => (/* binding */ lander_physics_init),\n/* harmony export */   lander_physics_tick: () => (/* binding */ lander_physics_tick),\n/* harmony export */   lander_ship: () => (/* binding */ lander_ship)\n/* harmony export */ });\n/* harmony import */ var _j3d_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../j3d/matrix */ \"./j3d/matrix.js\");\n/* harmony import */ var _j3d_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../j3d/model */ \"./j3d/model.js\");\n/* harmony import */ var _j3d_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../j3d/util */ \"./j3d/util.js\");\n/* harmony import */ var _j3d_vector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../j3d/vector */ \"./j3d/vector.js\");\n/* harmony import */ var _ground__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ground */ \"./lander/ground.js\");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./models */ \"./lander/models.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./globals */ \"./lander/globals.js\");\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./input */ \"./lander/input.js\");\n/*\r\n   Ajax3d - a 3d engine using the WHATWG HTML <canvas> tag.\r\n   \r\n   Copyright (C) 2007 Eben Upton\r\n   \r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of version 2 of the GNU General Public \r\n   License as published by the Free Software Foundation.\r\n   \r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n   \r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Software\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst lander_physics_g = [0, 0.0003, 0, 0];\r\nconst lander_physics_a = [0, -0.01, 0, 0];\r\n\r\nconst lander_ship = new lander_physics_ship([_ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_pad_x + 2, (0,_ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_height)(_ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_pad_x + 2, _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_pad_z + 2), _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_pad_z + 2, 1]);\r\n\r\nconst lander_aliens = new Array();\r\n\r\nfunction lander_physics_adjust(v)\r\n{\r\n   if (v[0] < lander_ship.p[0] - _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_size / 2)\r\n      v[0] += _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_size;\r\n   else\r\n      if (v[0] > lander_ship.p[0] + _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_size / 2)\r\n         v[0] -= _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_size;\r\n   \r\n   if (v[2] < lander_ship.p[2] - _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_size / 2)\r\n      v[2] += _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_size;\r\n   else\r\n      if (v[2] > lander_ship.p[2] + _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_size / 2)\r\n         v[2] -= _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_size;\r\n}\r\n\r\nfunction lander_physics_dot(_p, _v)\r\n{\r\n   var t = 0;\r\n   \r\n   var p = _p;\r\n   var v = _v;   \r\n   \r\n   this.tick = function() \r\n   {\r\n      t++;\r\n      \r\n      v = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(v, lander_physics_g);\r\n      p = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(p, v);\r\n\r\n      lander_physics_adjust(p);\r\n      \r\n      return t > 16 || p[1] >= (0,_ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_height)(p[0], p[2]);\r\n   };\r\n\r\n   this.draw = function(cam)\r\n   {\r\n      var vec1 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)([p], cam);\r\n      var vec2 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_dehomogenize)(vec1);\r\n            \r\n      _globals__WEBPACK_IMPORTED_MODULE_6__.lander_sort.add_particle(vec2[0], (0,_j3d_util__WEBPACK_IMPORTED_MODULE_2__.j3d_util_rgbacolor)(255, 255, 255, (17 - t) / 16), 1, 0, -0.04);\r\n   };\r\n}\r\n\r\nconst lander_bullet_kind_player = 0;\r\nconst lander_bullet_kind_enemy  = 1;\r\n\r\nfunction lander_physics_bullet(_p, _v, _kind)\r\n{\r\n   var p = _p;\r\n   var v = _v;   \r\n\r\n   var kind = _kind;   \r\n   \r\n   this.tick = function() \r\n   {\r\n      v = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(v, lander_physics_g);\r\n      p = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(p, v);\r\n\r\n      lander_physics_adjust(p);\r\n\r\n      if (kind == lander_bullet_kind_player) {\r\n         for (var i = 0; i < lander_aliens.length; i++)\r\n            if (lander_aliens[i].check_bullet(p))\r\n               return true;\r\n      } else {\r\n         if (lander_ship.check_bullet(p))\r\n            return true;\r\n      }\r\n            \r\n      return p[1] >= (0,_ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_height)(p[0], p[2]);\r\n   };\r\n\r\n   this.draw = function(cam)\r\n   {\r\n      if (p[0] > lander_ship.p[0] - _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_range && p[0] < lander_ship.p[0] + _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_range && p[2] > lander_ship.p[2] - _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_range && p[2] < lander_ship.p[2] + _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_range) {\r\n         var vec1 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)([p], cam);\r\n         var vec2 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_dehomogenize)(vec1);\r\n               \r\n         _globals__WEBPACK_IMPORTED_MODULE_6__.lander_sort.add_particle(vec2[0], (0,_j3d_util__WEBPACK_IMPORTED_MODULE_2__.j3d_util_rgbcolor)(255, 255, 255), 2, 0, -0.04);\r\n      }\r\n   };\r\n}\r\n\r\nfunction lander_physics_debris(_p, _v)\r\n{\r\n   var p = _p;\r\n   var v = _v;   \r\n   var r = [Math.random() * Math.PI * 2, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2, 0];\r\n   var w = [Math.random() * 0.2 - 0.1, Math.random() * 0.2 - 0.1, Math.random() * 0.2 - 0.1, 0];\r\n\r\n   function matrix(p, r)\r\n   {\r\n      var mat_rx = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_rotate_x)(r[0]);\r\n      var mat_ry = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_rotate_y)(r[1]);\r\n      var mat_rz = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_rotate_z)(r[2]);\r\n      var mat_tr = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_translate)(p[0], p[1], p[2]);\r\n      \r\n      var mat1 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(mat_rx, mat_ry);\r\n      var mat2 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(mat1, mat_rz);\r\n      var mat3 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(mat2, mat_tr);\r\n      \r\n      return mat3;\r\n   }\r\n   \r\n   this.tick = function() \r\n   {\r\n      v = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(v, lander_physics_g);\r\n      p = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(p, v);\r\n      r = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(r, w);\r\n      \r\n      lander_physics_adjust(p);\r\n      \r\n      return v[1] > 0 && p[1] >= (0,_ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_height)(p[0], p[2]);\r\n   };\r\n\r\n   var model1 = null;\r\n   var model2 = null;\r\n   var model3 = null;\r\n\r\n   this.draw = function(cam)\r\n   {\r\n      var mat = matrix(p, r);\r\n\r\n      model1 = _globals__WEBPACK_IMPORTED_MODULE_6__.lander_clip.clip_model(_models__WEBPACK_IMPORTED_MODULE_5__.lander_model_debris, mat, model1);\r\n      _globals__WEBPACK_IMPORTED_MODULE_6__.lander_light.light_model(model1, mat);\r\n      model2 = (0,_j3d_model__WEBPACK_IMPORTED_MODULE_1__.j3d_model_multiply)(model1, (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(mat, cam), model2);\r\n      model3 = (0,_j3d_model__WEBPACK_IMPORTED_MODULE_1__.j3d_model_dehomogenize)(model2, model3);\r\n\r\n      _globals__WEBPACK_IMPORTED_MODULE_6__.lander_sort.add_model(model3, 0);\r\n   };\r\n}\r\n\r\n\r\n\r\nfunction lander_physics_alien1(_p, a)\r\n{\r\n   const speed = 0.02;\r\n\r\n   const bullet_speed = 0.05;\r\n      \r\n   const width  = _models__WEBPACK_IMPORTED_MODULE_5__.alien1_a;\r\n   const height = _models__WEBPACK_IMPORTED_MODULE_5__.alien1_c;\r\n   \r\n   const state_flying = _globals__WEBPACK_IMPORTED_MODULE_6__.lander_alien_state_flying;\r\n   const state_dead   = _globals__WEBPACK_IMPORTED_MODULE_6__.lander_alien_state_dead;\r\n\r\n   var t = 100;\r\n   var c = 0;\r\n   \r\n   var p = _p;\r\n   var v = [speed * Math.sin(a), 0, speed * Math.cos(a), 0];   \r\n   var r = 0.0;\r\n\r\n   var health = 1.0;\r\n   \r\n   var state = state_flying;\r\n\r\n   this.p = p;\r\n   \r\n   this.alpha = 0.0;\r\n   \r\n   this.get_state = function()\r\n   {\r\n      return state;\r\n   }\r\n         \r\n   function matrix(p, r)\r\n   {\r\n      var mat_ry = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_rotate_y)(r);\r\n      var mat_tr = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_translate)(p[0], p[1], p[2]);\r\n      \r\n      var mat1 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(mat_ry, mat_tr);\r\n      \r\n      return mat1;\r\n   }\r\n\r\n   this.tick = function() \r\n   {\r\n      if (state == state_flying) {\r\n         p = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(p, v, p);\r\n         r += 0.04;\r\n   \r\n         p[1] = (0,_ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_height)(p[0], p[2]) - 3;\r\n               \r\n         lander_physics_adjust(p);\r\n   \r\n         var s = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_subtract)(lander_ship.p, p);\r\n         var h = s[1];\r\n   \r\n         s[1] = 0.0;\r\n\r\n         var r = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_magnitude)(s);\r\n                  \r\n         if (r > 1 && r < 5 && h > -5 && t < 0) {\r\n            var bullet_p = p;\r\n            var bullet_v = (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_multiply)((0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_normalize)(s), bullet_speed);\r\n\r\n            r /= bullet_speed;\r\n                        \r\n            bullet_v[1] = h / r - 0.5 * lander_physics_g[1] * r;\r\n      \r\n            lander_physics_objects.push(new lander_physics_bullet(bullet_p, bullet_v, lander_bullet_kind_enemy));\r\n             \r\n            if (c++ < 5)\r\n               t = 6;\r\n            else {\r\n               t = 120;\r\n               c = 0;\r\n            }\r\n         } else\r\n            t--;\r\n      }\r\n      \r\n      return false;\r\n   };\r\n\r\n   this.check_bullet = function(bullet_p)\r\n   {\r\n      if (state == state_flying &&\r\n          bullet_p[0] > p[0] - width && \r\n          bullet_p[0] < p[0] + width &&\r\n          bullet_p[1] > p[1] - height && \r\n          bullet_p[1] < p[1] + height &&\r\n          bullet_p[2] > p[2] - width && \r\n          bullet_p[2] < p[2] + width) {\r\n         health -= 0.2;\r\n         \r\n         if (health <= 0.0) {\r\n            lander_physics_add_explosion(p);\r\n            \r\n//            state = state_dead;\r\n            \r\n            health = 1.0;\r\n            this.alpha = 0.0;\r\n            \r\n            (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(p, [16, 0, 16, 0], p);            \r\n         }\r\n         \r\n         return true;\r\n      } else\r\n         return false;\r\n   };\r\n   \r\n   var model1 = null;\r\n   var model2 = null;\r\n   var model3 = null;\r\n   \r\n   this.draw = function(cam)\r\n   {\r\n      if (state != state_dead) {\r\n         var range = _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_range + _models__WEBPACK_IMPORTED_MODULE_5__.alien1_a;\r\n         \r\n         if (p[0] > lander_ship.p[0] - range && p[0] < lander_ship.p[0] + range && p[2] > lander_ship.p[2] - range && p[2] < lander_ship.p[2] + range) {\r\n            var mat = matrix(p, r);\r\n      \r\n            model1 = _globals__WEBPACK_IMPORTED_MODULE_6__.lander_clip.clip_model(_models__WEBPACK_IMPORTED_MODULE_5__.lander_model_alien1, mat, model1);\r\n            _globals__WEBPACK_IMPORTED_MODULE_6__.lander_light.light_model(model1, mat);\r\n            model2 = (0,_j3d_model__WEBPACK_IMPORTED_MODULE_1__.j3d_model_multiply)(model1, (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(mat, cam), model2);\r\n            model3 = (0,_j3d_model__WEBPACK_IMPORTED_MODULE_1__.j3d_model_dehomogenize)(model2, model3);\r\n      \r\n            _globals__WEBPACK_IMPORTED_MODULE_6__.lander_sort.add_model(model3, 0);\r\n         }\r\n      }\r\n   };\r\n}\r\n\r\nfunction lander_physics_ship(_p, _v)\r\n{\r\n   const width  = 0.5;\r\n   const height = 0.2;\r\n   \r\n   const state_landed = 0;\r\n   const state_flying = 1;\r\n   const state_dead   = 2;\r\n      \r\n   var t = 0;\r\n   \r\n   var p = _p;\r\n   var v = [0, 0, 0, 0];   \r\n   var r = [0, Math.PI / 4, 0, 0];\r\n\r\n   var fuel = 0.0;\r\n   var health = 1.0;\r\n\r\n   var state = state_landed;\r\n\r\n   this.p = p;\r\n   this.r = r;\r\n\r\n   this.get_fuel = function()\r\n   {\r\n      return fuel;\r\n   }\r\n\r\n   this.get_health = function()\r\n   {\r\n      return health;\r\n   }\r\n   \r\n   function matrix(p, r)\r\n   {\r\n      var mat_rx = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_rotate_x)(r[0]);\r\n      var mat_ry = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_rotate_y)(r[1]);\r\n      var mat_tr = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_translate)(p[0], p[1], p[2]);\r\n      \r\n      var mat1 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(mat_rx, mat_ry);\r\n      var mat2 = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(mat1, mat_tr);\r\n      \r\n      return mat2;\r\n   }\r\n   \r\n   this.tick = function() \r\n   {\r\n      switch (state) {\r\n      case state_landed:\r\n      {\r\n         fuel += 0.002;\r\n         \r\n         if (fuel > 1.0)\r\n            fuel = 1.0;\r\n            \r\n         if (_input__WEBPACK_IMPORTED_MODULE_7__.input.lander_input_lmb_pressed)\r\n            state = state_flying;\r\n            \r\n         break;\r\n      }   \r\n      case state_flying:\r\n      {\r\n         r[0] += _input__WEBPACK_IMPORTED_MODULE_7__.input.lander_input_dy / 32;\r\n         r[1] += _input__WEBPACK_IMPORTED_MODULE_7__.input.lander_input_dx / 32;\r\n         \r\n         if (r[0] < -Math.PI / 2)\r\n            r[0] = -Math.PI / 2;\r\n         if (r[0] > Math.PI / 2)\r\n            r[0] = Math.PI / 2;\r\n      \r\n         var mat = matrix(p, r);\r\n                  \r\n         if (_input__WEBPACK_IMPORTED_MODULE_7__.input.lander_input_lmb_pressed && fuel > 0.0) {\r\n            var a = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)([lander_physics_a], mat)[0];\r\n            \r\n            (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(v, a, v);\r\n            \r\n            var dot_p = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)([[0.2 * Math.random() - 0.1, 0.2, 0.2 * Math.random() - 0.1, 1]], mat)[0];\r\n            var dot_v = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)([[0.01 * Math.random() - 0.005, 0.15 + 0.05 * Math.random(), 0.01 * Math.random() - 0.005, 0]], mat)[0];\r\n      \r\n            lander_physics_objects.push(new lander_physics_dot(dot_p, dot_v));\r\n            \r\n            fuel -= 0.0002;\r\n            \r\n            if (fuel < 0.0)\r\n               fuel = 0.0;\r\n         }\r\n\r\n         if (_input__WEBPACK_IMPORTED_MODULE_7__.input.lander_input_rmb_pressed && t < 0) {\r\n            var bullet_p = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)([[0.0, 0.0, 0.3, 1.0]], mat)[0];\r\n            var bullet_v = (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)([[0.0, 0.0, 0.2, 0.0]], mat)[0];\r\n      \r\n            lander_physics_objects.push(new lander_physics_bullet(bullet_p, bullet_v, lander_bullet_kind_player));\r\n            \r\n            t = 2;\r\n         } else\r\n            t--;\r\n                  \r\n         (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(v, lander_physics_g, v);\r\n         (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_multiply)(v, 0.98, v);\r\n         \r\n         (0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_add)(p, v, p);\r\n   \r\n         var height = (0,_ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_height)(p[0], p[2]);\r\n               \r\n         if (p[1] > height) {\r\n            var x = Math.floor(p[0]) & _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_mask;\r\n            var z = Math.floor(p[2]) & _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_mask;\r\n            \r\n            if (x >= _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_pad_x && x < _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_pad_x + 4 && \r\n                z >= _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_pad_z && z < _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_pad_z + 4 && \r\n                r[0] > -0.3 && r[0] < 0.3 && \r\n                v[0] > -0.3 && v[0] < 0.3 && \r\n                v[1] > -0.1 && v[1] < 0.1 &&\r\n                v[2] > -0.3 && v[2] < 0.3) {\r\n               state = state_landed;\r\n               \r\n               p[1] = height;\r\n               v = [0, 0, 0, 0];\r\n               r[0] = 0;\r\n            } else {\r\n               state = state_dead;\r\n               \r\n               health = 0.0;\r\n               \r\n               lander_physics_add_explosion(p);\r\n            }\r\n         }\r\n         break;\r\n      }         \r\n      case state_dead:\r\n      {\r\n         break;\r\n      }\r\n      }\r\n      \r\n      _input__WEBPACK_IMPORTED_MODULE_7__.input.lander_input_dx = 0;\r\n      _input__WEBPACK_IMPORTED_MODULE_7__.input.lander_input_dy = 0;   \r\n            \r\n      return false;\r\n   };\r\n   \r\n   this.check_bullet = function(bullet_p)\r\n   {\r\n      if (state != state_dead &&\r\n          bullet_p[0] > p[0] - width && \r\n          bullet_p[0] < p[0] + width &&\r\n          bullet_p[1] > p[1] - height && \r\n          bullet_p[1] < p[1] + height &&\r\n          bullet_p[2] > p[2] - width && \r\n          bullet_p[2] < p[2] + width) {\r\n         health -= 0.02;\r\n         \r\n         if (health <= 0.0) {\r\n            lander_physics_add_explosion(p);\r\n            \r\n            state = state_dead;\r\n         }\r\n         \r\n         return true;\r\n      } else\r\n         return false;\r\n   };\r\n\r\n   var model1 = null;\r\n   var model2 = null;\r\n      \r\n   this.draw = function(cam)\r\n   {\r\n      if (state != state_dead) {\r\n         var mat = matrix(p, r);\r\n      \r\n         _globals__WEBPACK_IMPORTED_MODULE_6__.lander_light.light_model(_models__WEBPACK_IMPORTED_MODULE_5__.lander_model_ship, mat);\r\n         model1 = (0,_j3d_model__WEBPACK_IMPORTED_MODULE_1__.j3d_model_multiply)(_models__WEBPACK_IMPORTED_MODULE_5__.lander_model_ship, (0,_j3d_matrix__WEBPACK_IMPORTED_MODULE_0__.j3d_matrix_multiply)(mat, cam), model1);\r\n         model2 = (0,_j3d_model__WEBPACK_IMPORTED_MODULE_1__.j3d_model_dehomogenize)(model1, model2);\r\n\r\n         _globals__WEBPACK_IMPORTED_MODULE_6__.lander_sort.add_model(model2, 1);\r\n      }\r\n   };\r\n}\r\n\r\nfunction lander_physics_add_explosion(p)\r\n{\r\n   for (var i = 0; i < 8; i++) {\r\n      var debris = new lander_physics_debris((0,_j3d_vector__WEBPACK_IMPORTED_MODULE_3__.j3d_vector_copy)(p), [0.1 * Math.random() - 0.05, -0.05 * Math.random() - 0.1, 0.1 * Math.random() - 0.05, 0.0]);\r\n      \r\n      lander_physics_objects.push(debris);\r\n   }\r\n}\r\n\r\nvar lander_physics_objects = [];\r\n\r\nfunction lander_physics_init()\r\n{\r\n   lander_physics_objects.push(lander_ship);\r\n\r\n   for (var i = 0; i < 4; i++) {\r\n      var alien = new lander_physics_alien1([Math.random() * _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_size, 0, Math.random() * _ground__WEBPACK_IMPORTED_MODULE_4__.lander_ground_size, 1], Math.random() * Math.PI * 2);\r\n      \r\n      lander_aliens.push(alien);\r\n      lander_physics_objects.push(alien);\r\n   }\r\n}\r\n\r\nfunction lander_physics_tick()\r\n{\r\n   for (var i = 0; i < lander_physics_objects.length; ) {\r\n      var obj = lander_physics_objects[i];\r\n      \r\n      if (obj.tick())\r\n         lander_physics_objects.splice(i, 1);\r\n      else\r\n         i++;\r\n   }\r\n}\r\n\r\nfunction lander_physics_draw(cam)\r\n{\r\n   for (var i = 0; i < lander_physics_objects.length; i++) {\r\n      var obj = lander_physics_objects[i];\r\n\r\n      obj.draw(cam);\r\n   }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://Game/./lander/physics.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./game.js");
/******/ 	Game = __webpack_exports__;
/******/ 	
/******/ })()
;